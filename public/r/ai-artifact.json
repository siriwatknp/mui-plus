{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "ai-artifact",
  "type": "registry:item",
  "title": "AI Artifact",
  "description": "A container component for displaying artifacts with header, actions, and content areas",
  "dependencies": [
    "@mui/material",
    "@emotion/react",
    "@emotion/styled"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "components/ai-artifact/ai-artifact.demo.tsx",
      "target": "src/mui-plus/components/ai-artifact/ai-artifact.demo.tsx",
      "content": "\"use client\";\n\nimport {\n  Artifact,\n  ArtifactHeader,\n  ArtifactTitle,\n  ArtifactDescription,\n  ArtifactActions,\n  ArtifactAction,\n  ArtifactClose,\n  ArtifactContent,\n} from \"./ai-artifact\";\nimport { CopyIcon, ShareIcon, DownloadIcon, ExpandIcon } from \"lucide-react\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\n\nexport default function AIArtifactDemo() {\n  return (\n    <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 4, p: 4 }}>\n      {/* Basic Artifact */}\n      <Box sx={{ maxWidth: 600 }}>\n        <Typography variant=\"body2\" sx={{ mb: 2, color: \"text.secondary\" }}>\n          Basic Artifact\n        </Typography>\n        <Artifact>\n          <ArtifactHeader>\n            <Box>\n              <ArtifactTitle>Generated Code</ArtifactTitle>\n              <ArtifactDescription>\n                Python function to calculate fibonacci\n              </ArtifactDescription>\n            </Box>\n            <ArtifactActions>\n              <ArtifactAction\n                tooltip=\"Copy to clipboard\"\n                icon={CopyIcon}\n                onClick={() => console.log(\"Copy clicked\")}\n              />\n              <ArtifactAction\n                tooltip=\"Share\"\n                icon={ShareIcon}\n                onClick={() => console.log(\"Share clicked\")}\n              />\n              <ArtifactClose onClick={() => console.log(\"Close clicked\")} />\n            </ArtifactActions>\n          </ArtifactHeader>\n          <ArtifactContent>\n            <Box\n              component=\"pre\"\n              sx={{\n                m: 0,\n                p: 2,\n                bgcolor: \"grey.50\",\n                borderRadius: 1,\n                overflow: \"auto\",\n                fontSize: \"0.875rem\",\n                fontFamily: \"monospace\",\n              }}\n            >\n              {`def fibonacci(n):\n    if n <= 1:\n        return n\n    return fibonacci(n-1) + fibonacci(n-2)\n\n# Example usage\nfor i in range(10):\n    print(f\"F({i}) = {fibonacci(i)}\")`}\n            </Box>\n          </ArtifactContent>\n        </Artifact>\n      </Box>\n\n      {/* Artifact with Rich Content */}\n      <Box sx={{ maxWidth: 600 }}>\n        <Typography variant=\"body2\" sx={{ mb: 2, color: \"text.secondary\" }}>\n          Artifact with Rich Content\n        </Typography>\n        <Artifact>\n          <ArtifactHeader>\n            <Box>\n              <ArtifactTitle>Data Visualization</ArtifactTitle>\n              <ArtifactDescription>\n                Monthly sales chart for Q4 2024\n              </ArtifactDescription>\n            </Box>\n            <ArtifactActions>\n              <ArtifactAction\n                tooltip=\"Download\"\n                icon={DownloadIcon}\n                onClick={() => console.log(\"Download clicked\")}\n              />\n              <ArtifactAction\n                tooltip=\"Expand\"\n                icon={ExpandIcon}\n                onClick={() => console.log(\"Expand clicked\")}\n              />\n              <ArtifactClose onClick={() => console.log(\"Close clicked\")} />\n            </ArtifactActions>\n          </ArtifactHeader>\n          <ArtifactContent>\n            <Box sx={{ p: 2 }}>\n              <Typography variant=\"h6\" gutterBottom>\n                Sales Performance\n              </Typography>\n              <Typography variant=\"body2\" sx={{ mb: 2 }}>\n                The chart shows a steady increase in sales throughout Q4, with a\n                notable spike during the holiday season.\n              </Typography>\n              <Box\n                sx={{\n                  height: 200,\n                  bgcolor: \"action.hover\",\n                  borderRadius: 1,\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  [Chart Placeholder]\n                </Typography>\n              </Box>\n            </Box>\n          </ArtifactContent>\n        </Artifact>\n      </Box>\n\n      {/* Compact Artifact */}\n      <Box sx={{ maxWidth: 600 }}>\n        <Typography variant=\"body2\" sx={{ mb: 2, color: \"text.secondary\" }}>\n          Compact Artifact (No Description)\n        </Typography>\n        <Artifact>\n          <ArtifactHeader>\n            <ArtifactTitle>Quick Note</ArtifactTitle>\n            <ArtifactActions>\n              <ArtifactAction\n                tooltip=\"Copy\"\n                icon={CopyIcon}\n                onClick={() => console.log(\"Copy clicked\")}\n              />\n              <ArtifactClose onClick={() => console.log(\"Close clicked\")} />\n            </ArtifactActions>\n          </ArtifactHeader>\n          <ArtifactContent>\n            <Typography variant=\"body2\">\n              This is a simple note artifact without a description, showing a\n              more compact header layout.\n            </Typography>\n          </ArtifactContent>\n        </Artifact>\n      </Box>\n    </Box>\n  );\n}\n",
      "type": "registry:item"
    },
    {
      "path": "components/ai-artifact/ai-artifact.tsx",
      "target": "src/mui-plus/components/ai-artifact/ai-artifact.tsx",
      "content": "\"use client\";\n\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Paper from \"@mui/material/Paper\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Typography from \"@mui/material/Typography\";\nimport { XIcon } from \"lucide-react\";\nimport type { ComponentProps } from \"react\";\n\nexport type ArtifactProps = ComponentProps<typeof Paper>;\n\nexport const Artifact = ({ children, sx, ...props }: ArtifactProps) => (\n  <Paper\n    elevation={4}\n    sx={{\n      display: \"flex\",\n      flexDirection: \"column\",\n      overflow: \"hidden\",\n      border: 1,\n      borderColor: \"divider\",\n      ...sx,\n    }}\n    {...props}\n  >\n    {children}\n  </Paper>\n);\n\nexport type ArtifactHeaderProps = ComponentProps<typeof Box>;\n\nexport const ArtifactHeader = ({\n  children,\n  sx,\n  ...props\n}: ArtifactHeaderProps) => (\n  <Box\n    sx={[\n      (theme) => ({\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        borderBottom: 1,\n        borderColor: \"divider\",\n        bgcolor: (theme.vars || theme).palette.action.hover,\n        px: 2,\n        py: 1.5,\n      }),\n      ...(Array.isArray(sx) ? sx : [sx]),\n    ]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n\nexport type ArtifactCloseProps = ComponentProps<typeof IconButton>;\n\nexport const ArtifactClose = ({\n  children,\n  size = \"small\",\n  sx,\n  ...props\n}: ArtifactCloseProps) => (\n  <IconButton\n    size={size}\n    type=\"button\"\n    sx={{\n      width: 32,\n      height: 32,\n      p: 0,\n      color: \"text.secondary\",\n      \"&:hover\": {\n        color: \"text.primary\",\n      },\n      ...sx,\n    }}\n    aria-label=\"Close\"\n    {...props}\n  >\n    {children ?? <XIcon className=\"size-4\" />}\n  </IconButton>\n);\n\nexport type ArtifactTitleProps = ComponentProps<typeof Typography>;\n\nexport const ArtifactTitle = ({ sx, ...props }: ArtifactTitleProps) => (\n  <Typography\n    variant=\"body2\"\n    sx={{\n      fontWeight: 500,\n      color: \"text.primary\",\n      ...sx,\n    }}\n    {...props}\n  />\n);\n\nexport type ArtifactDescriptionProps = ComponentProps<typeof Typography>;\n\nexport const ArtifactDescription = ({\n  sx,\n  ...props\n}: ArtifactDescriptionProps) => (\n  <Typography\n    variant=\"body2\"\n    sx={{\n      color: \"text.secondary\",\n      ...sx,\n    }}\n    {...props}\n  />\n);\n\nexport type ArtifactActionsProps = ComponentProps<typeof Box>;\n\nexport const ArtifactActions = ({\n  children,\n  sx,\n  ...props\n}: ArtifactActionsProps) => (\n  <Box\n    sx={{\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: 0.5,\n      ...sx,\n    }}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n\nexport type ArtifactActionProps = ComponentProps<typeof IconButton> & {\n  tooltip?: string;\n  label?: string;\n  icon?: React.ComponentType<{ className?: string }>;\n};\n\nexport const ArtifactAction = ({\n  tooltip,\n  label,\n  icon: Icon,\n  children,\n  size = \"small\",\n  sx,\n  ...props\n}: ArtifactActionProps) => {\n  const button = (\n    <IconButton\n      size={size}\n      type=\"button\"\n      sx={{\n        width: 32,\n        height: 32,\n        p: 0,\n        color: \"text.secondary\",\n        \"&:hover\": {\n          color: \"text.primary\",\n        },\n        ...sx,\n      }}\n      aria-label={label || tooltip}\n      {...props}\n    >\n      {Icon ? <Icon className=\"size-4\" /> : children}\n    </IconButton>\n  );\n\n  if (tooltip) {\n    return (\n      <Tooltip title={tooltip} arrow>\n        {button}\n      </Tooltip>\n    );\n  }\n\n  return button;\n};\n\nexport type ArtifactContentProps = ComponentProps<typeof Box>;\n\nexport const ArtifactContent = ({\n  children,\n  sx,\n  ...props\n}: ArtifactContentProps) => (\n  <Box\n    sx={{\n      flex: 1,\n      overflow: \"auto\",\n      p: 2,\n      ...sx,\n    }}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n",
      "type": "registry:item"
    }
  ],
  "meta": {
    "screenshot": "/screenshots/ai-artifact.png",
    "category": "ai"
  }
}