{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "login-dialog",
  "type": "registry:component",
  "title": "Login Dialog",
  "description": "A button that opens a dialog with a login form (title, email, password, submit button) and basic validation.",
  "dependencies": [
    "@mui/material",
    "@mui/icons-material",
    "@emotion/react",
    "@emotion/styled"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/components/login-dialog/login-dialog.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\n\nexport function LoginDialog() {\n  const [open, setOpen] = React.useState(false);\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [errors, setErrors] = React.useState<{\n    email?: string;\n    password?: string;\n  }>({});\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const validate = () => {\n    const newErrors: { email?: string; password?: string } = {};\n    if (!email) newErrors.email = \"Email is required\";\n    else if (!/^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$/.test(email))\n      newErrors.email = \"Invalid email\";\n    if (!password) newErrors.password = \"Password is required\";\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (validate()) {\n      // handle login logic here\n      handleClose();\n    }\n  };\n\n  return (\n    <>\n      <Button variant=\"contained\" onClick={handleOpen}>\n        Login\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        maxWidth=\"xs\"\n        fullWidth\n        sx={(theme) => ({\n          [theme.breakpoints.up(\"md\")]: {\n            \"--_spacing-row\": \"32px\",\n            \"--_spacing-col\": \"32px\",\n          },\n        })}\n      >\n        <DialogTitle sx={{ pb: 0, fontWeight: 600, fontSize: 24 }}>\n          Login\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText sx={{ mb: 2, color: \"text.secondary\" }}>\n            Please enter your credentials to continue\n          </DialogContentText>\n          <Box component=\"form\" onSubmit={handleSubmit}>\n            <TextField\n              label=\"Email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              error={!!errors.email}\n              helperText={errors.email}\n              autoFocus\n              required\n              fullWidth\n              margin=\"normal\"\n            />\n            <TextField\n              label=\"Password\"\n              type={showPassword ? \"text\" : \"password\"}\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              error={!!errors.password}\n              helperText={errors.password}\n              required\n              fullWidth\n              margin=\"normal\"\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label={\n                        showPassword ? \"Hide password\" : \"Show password\"\n                      }\n                      onClick={() => setShowPassword((v) => !v)}\n                      edge=\"end\"\n                      tabIndex={-1}\n                    >\n                      {showPassword ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n            <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mb: 1 }}>\n              <Button\n                size=\"small\"\n                color=\"primary\"\n                sx={{ textTransform: \"none\" }}\n              >\n                Forgot password?\n              </Button>\n            </Box>\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button type=\"submit\" variant=\"contained\">\n            Login\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "screenshot": "/screenshots/login-dialog.png"
  }
}