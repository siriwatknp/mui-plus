{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "mui-plus",
  "type": "registry:theme",
  "title": "MUI Plus Theme",
  "description": "A refined minimal theme with monochromatic primary palette, system-native fonts, and subtle shadows for professional applications",
  "dependencies": [
    "@mui/material",
    "@emotion/react",
    "@emotion/styled",
    "@mui/x-data-grid",
    "@mui/x-date-pickers",
    "@mui/x-date-pickers-pro",
    "@mui/x-tree-view"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "themes/mui-plus/components/alert.ts",
      "content": "import type { ThemeOptions } from \"@mui/material/styles\";\n\nexport const alertTheme: ThemeOptions[\"components\"] = {\n  MuiAlert: {\n    styleOverrides: {\n      root: {\n        \"--Icon-color\": \"currentColor\",\n      },\n    },\n  },\n};\n",
      "type": "registry:theme"
    },
    {
      "path": "themes/mui-plus/components/autocomplete.ts",
      "content": "import type { ThemeOptions } from \"@mui/material/styles\";\n\nexport const autocompleteTheme: ThemeOptions[\"components\"] = {\n  MuiAutocomplete: {\n    defaultProps: {\n      slotProps: {\n        paper: {\n          elevation: 8,\n        },\n      },\n    },\n    styleOverrides: {\n      root: {\n        \"& .MuiAutocomplete-inputRoot\": {\n          paddingTop: 6,\n          paddingBottom: 6,\n          paddingRight: 40,\n          \"&:has(.MuiChip-root)\": {\n            paddingLeft: \"6px\",\n          },\n          \"& .MuiAutocomplete-input\": {\n            paddingBlock: 7.5,\n          },\n        },\n        \"& .MuiAutocomplete-inputRoot.MuiInputBase-sizeSmall\": {\n          paddingTop: 4,\n          paddingBottom: 4,\n          \"&:has(.MuiChip-root)\": {\n            paddingLeft: 4,\n          },\n          \"& .MuiAutocomplete-input\": {\n            paddingBlock: 4.5,\n          },\n        },\n      },\n      tag: {\n        margin: 2,\n      },\n      option: ({ theme }) => ({\n        fontSize: theme.typography.body2.fontSize,\n        padding: \"6px\",\n        borderRadius: 4,\n      }),\n      paper: ({ theme }) => ({\n        marginTop: 4,\n        borderRadius: 8,\n        border: `1px solid ${(theme.vars || theme).palette.divider}`,\n      }),\n      listbox: {\n        padding: \"6px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: \"4px\",\n      },\n      noOptions: ({ theme }) => ({\n        fontSize: theme.typography.body2.fontSize,\n        color: (theme.vars || theme).palette.text.secondary,\n      }),\n      loading: ({ theme }) => ({\n        fontSize: theme.typography.body2.fontSize,\n        color: (theme.vars || theme).palette.text.secondary,\n      }),\n      clearIndicator: {\n        borderRadius: 4,\n      },\n      popupIndicator: {\n        borderRadius: 4,\n        variants: [\n          {\n            props: { size: \"small\" },\n            style: {\n              marginRight: -5,\n            },\n          },\n        ],\n      },\n    },\n  },\n};\n",
      "type": "registry:theme"
    },
    {
      "path": "themes/mui-plus/components/avatar.ts",
      "content": "import type { ThemeOptions } from \"@mui/material/styles\";\n\nexport const avatarTheme: ThemeOptions[\"components\"] = {\n  MuiAvatar: {\n    styleOverrides: {\n      root: ({ theme }) => ({\n        fontWeight: 500,\n        fontSize: theme.typography.body2.fontSize,\n        backgroundColor: (theme.vars || theme).palette.secondary.light,\n        color: (theme.vars || theme).palette.text.secondary,\n        ...theme.applyStyles(\"dark\", {\n          backgroundColor: (theme.vars || theme).palette.secondary.dark,\n        }),\n      }),\n    },\n  },\n};\n",
      "type": "registry:theme"
    },
    {
      "path": "themes/mui-plus/components/button.ts",
      "content": "import type { ThemeOptions } from \"@mui/material/styles\";\n\nexport const buttonTheme: ThemeOptions[\"components\"] = {\n  MuiButtonBase: {\n    styleOverrides: {\n      root: ({ theme }) => ({\n        \"&& .MuiTouchRipple-child\": {\n          background: \"color-mix(in oklch, currentColor, transparent 60%)\",\n        },\n        \"--Icon-color\": \"color-mix(in oklch, currentColor, transparent 12%)\",\n        \"--Icon-size\": \"1lh\",\n        ...theme.applyStyles(\"dark\", {\n          \"--Icon-color\": \"color-mix(in oklch, currentColor, transparent 30%)\",\n        }),\n        \"&:hover\": {\n          \"--Icon-color\": \"currentColor\",\n        },\n      }),\n    },\n  },\n  MuiIconButton: {\n    styleOverrides: {\n      root: ({ theme }) => ({\n        \"&.Mui-focusVisible\": {\n          outline: \"2px solid\",\n          outlineColor: (theme.vars || theme).palette.text.primary,\n          outlineOffset: \"2px\",\n        },\n        \"&:active\": {\n          transform: \"scale(0.98)\",\n        },\n        variants: [\n          {\n            props: { size: \"medium\" },\n            style: {\n              fontSize: \"inherit\",\n              lineHeight: \"inherit\",\n            },\n          },\n          {\n            props: { color: \"default\" },\n            style: {\n              \"&:hover, &:focus-visible\": {\n                color: (theme.vars || theme).palette.text.primary,\n              },\n            },\n          },\n        ],\n      }),\n    },\n  },\n  MuiButton: {\n    defaultProps: {\n      disableElevation: true,\n    },\n    styleOverrides: {\n      root: ({ theme }) => ({\n        minWidth: \"unset\",\n        textTransform: \"capitalize\",\n        \"&.Mui-focusVisible\": {\n          outline: \"2px solid\",\n          outlineColor: (theme.vars || theme).palette.text.primary,\n          outlineOffset: \"2px\",\n        },\n        \"&:active\": {\n          transform: \"scale(0.98)\",\n        },\n        \"@media (hover: hover)\": {\n          \"&:disabled\": {\n            pointerEvents: \"auto\",\n            cursor: \"not-allowed\",\n          },\n        },\n        // When button contains only an icon (with or without TouchRipple)\n        \"&:has(> svg:first-of-type):not(:has(> :not(svg):not(.MuiTouchRipple-root)))\":\n          {\n            \"--Icon-color\": \"currentColor\",\n            \"&.MuiButton-sizeSmall\": {\n              padding: \"4px\",\n              minWidth: \"28px\",\n            },\n            \"&.MuiButton-sizeMedium\": {\n              padding: \"8px\",\n              minWidth: \"36px\",\n            },\n            \"&.MuiButton-sizeLarge\": {\n              padding: \"12px\",\n              minWidth: \"48px\",\n            },\n            // Outlined variant needs to compensate for border\n            \"&.MuiButton-outlined\": {\n              \"&.MuiButton-sizeSmall\": {\n                padding: \"3px\",\n              },\n              \"&.MuiButton-sizeMedium\": {\n                padding: \"7px\",\n              },\n              \"&.MuiButton-sizeLarge\": {\n                padding: \"11px\",\n              },\n            },\n          },\n        variants: [\n          // Size variants\n          {\n            props: { size: \"small\" },\n            style: {\n              padding: \"4px 12px\",\n              lineHeight: \"20px\",\n            },\n          },\n          {\n            props: { size: \"medium\" },\n            style: {\n              padding: \"8px 16px\",\n              lineHeight: \"20px\",\n            },\n          },\n          {\n            props: { size: \"large\" },\n            style: {\n              \"--_fs\": \"1rem\",\n              padding: \"12px 24px\",\n              lineHeight: \"24px\",\n              fontSize: \"var(--_fs)\",\n              [theme.breakpoints.up(768)]: {\n                \"--_fs\": \"0.875rem\",\n              },\n            },\n          },\n          // Outlined border compensation for all sizes\n          {\n            props: { variant: \"outlined\" },\n            style: {\n              \"&.MuiButton-sizeSmall\": {\n                padding: \"3px 12px\",\n              },\n              \"&.MuiButton-sizeMedium\": {\n                padding: \"7px 16px\",\n              },\n              \"&.MuiButton-sizeLarge\": {\n                padding: \"11px 24px\",\n              },\n              \"& .MuiTouchRipple-root\": {\n                inset: \"-1px\",\n              },\n            },\n          },\n          // Text variant uses custom text colors\n          {\n            props: { variant: \"text\" },\n            style: {\n              \"&.MuiButton-colorSecondary\": {\n                \"--variant-textColor\": (theme.vars || theme).palette.secondary\n                  .text,\n              },\n              \"&.MuiButton-colorSuccess\": {\n                \"--variant-textColor\": (theme.vars || theme).palette.success\n                  .text,\n              },\n              \"&.MuiButton-colorError\": {\n                \"--variant-textColor\": (theme.vars || theme).palette.error.text,\n              },\n              \"&.MuiButton-colorWarning\": {\n                \"--variant-textColor\": (theme.vars || theme).palette.warning\n                  .text,\n              },\n              \"&.MuiButton-colorInfo\": {\n                \"--variant-textColor\": (theme.vars || theme).palette.info.text,\n              },\n              color: \"var(--variant-textColor)\",\n            },\n          },\n          // Outlined variant uses custom text colors and subtle borders\n          {\n            props: { variant: \"outlined\" },\n            style: {\n              \"&.MuiButton-colorPrimary\": {\n                \"--variant-outlinedBorder\": `color-mix(in srgb, ${\n                  (theme.vars || theme).palette.primary.main\n                } 12%, transparent)`,\n              },\n              \"&.MuiButton-colorSecondary\": {\n                \"--variant-outlinedColor\": (theme.vars || theme).palette\n                  .secondary.text,\n                \"--variant-outlinedBorder\": `color-mix(in srgb, ${\n                  (theme.vars || theme).palette.secondary.text\n                } 28%, transparent)`,\n              },\n              \"&.MuiButton-colorSuccess\": {\n                \"--variant-outlinedColor\": (theme.vars || theme).palette.success\n                  .text,\n                \"--variant-outlinedBorder\": `color-mix(in srgb, ${\n                  (theme.vars || theme).palette.success.text\n                } 28%, transparent)`,\n              },\n              \"&.MuiButton-colorError\": {\n                \"--variant-outlinedColor\": (theme.vars || theme).palette.error\n                  .text,\n                \"--variant-outlinedBorder\": `color-mix(in srgb, ${\n                  (theme.vars || theme).palette.error.text\n                } 28%, transparent)`,\n              },\n              \"&.MuiButton-colorWarning\": {\n                \"--variant-outlinedColor\": (theme.vars || theme).palette.warning\n                  .text,\n                \"--variant-outlinedBorder\": `color-mix(in srgb, ${\n                  (theme.vars || theme).palette.warning.text\n                } 28%, transparent)`,\n              },\n              \"&.MuiButton-colorInfo\": {\n                \"--variant-outlinedColor\": (theme.vars || theme).palette.info\n                  .text,\n                \"--variant-outlinedBorder\": `color-mix(in srgb, ${\n                  (theme.vars || theme).palette.info.text\n                } 28%, transparent)`,\n              },\n              color: \"var(--variant-outlinedColor)\",\n              borderColor: \"var(--variant-outlinedBorder)\",\n            },\n          },\n          // Contained variant for success, error, warning, info\n          {\n            props: { variant: \"contained\", color: \"success\" },\n            style: {\n              color: `color-mix(in oklch, ${\n                (theme.vars || theme).palette.success.text\n              }, ${(theme.vars || theme).palette.common.onBackground} 30%)`,\n              backgroundColor: `color-mix(in oklch, ${\n                (theme.vars || theme).palette.success.main\n              }, ${(theme.vars || theme).palette.common.background} 60%)`,\n            },\n          },\n          {\n            props: { variant: \"contained\", color: \"error\" },\n            style: {\n              color: `color-mix(in oklch, ${\n                (theme.vars || theme).palette.error.text\n              }, ${(theme.vars || theme).palette.common.onBackground} 30%)`,\n              backgroundColor: `color-mix(in oklch, ${\n                (theme.vars || theme).palette.error.main\n              }, ${(theme.vars || theme).palette.common.background} 60%)`,\n            },\n          },\n          {\n            props: { variant: \"contained\", color: \"warning\" },\n            style: {\n              color: `color-mix(in oklch, ${\n                (theme.vars || theme).palette.warning.text\n              }, ${(theme.vars || theme).palette.common.onBackground} 30%)`,\n              backgroundColor: `color-mix(in oklch, ${\n                (theme.vars || theme).palette.warning.main\n              }, ${(theme.vars || theme).palette.common.background} 60%)`,\n            },\n          },\n          {\n            props: { variant: \"contained\", color: \"info\" },\n            style: {\n              color: `color-mix(in oklch, ${\n                (theme.vars || theme).palette.info.text\n              }, ${(theme.vars || theme).palette.common.onBackground} 30%)`,\n              backgroundColor: `color-mix(in oklch, ${\n                (theme.vars || theme).palette.info.main\n              }, ${(theme.vars || theme).palette.common.background} 60%)`,\n            },\n          },\n        ],\n      }),\n    },\n  },\n  MuiFab: {\n    styleOverrides: {\n      root: ({ theme }) => ({\n        \"&.Mui-focusVisible\": {\n          outline: \"2px solid\",\n          outlineColor: (theme.vars || theme).palette.text.primary,\n          outlineOffset: \"2px\",\n        },\n      }),\n    },\n  },\n};\n",
      "type": "registry:theme"
    },
    {
      "path": "themes/mui-plus/components/card.ts",
      "content": "import type { ThemeOptions } from \"@mui/material/styles\";\n\nexport const cardTheme: ThemeOptions[\"components\"] = {\n  MuiCard: {\n    defaultProps: {\n      variant: \"outlined\",\n    },\n    styleOverrides: {\n      root: ({ theme }) => ({\n        transition: theme.transitions.create([\"box-shadow\", \"border-color\"], {\n          duration: theme.transitions.duration.short,\n        }),\n        \"&:hover\": {\n          boxShadow: theme.shadows[4],\n        },\n      }),\n    },\n  },\n  MuiCardHeader: {\n    styleOverrides: {\n      root: {\n        padding: 16,\n      },\n      title: ({ theme }) => ({\n        ...theme.typography.subtitle1,\n        fontWeight: 500,\n      }),\n      subheader: ({ theme }) => ({\n        ...theme.typography.body2,\n      }),\n      action: {\n        marginTop: 0,\n        marginRight: 0,\n      },\n    },\n  },\n  MuiCardContent: {\n    styleOverrides: {\n      root: {\n        padding: 16,\n        \"&:last-child\": {\n          paddingBottom: 16,\n        },\n      },\n    },\n  },\n  MuiCardActions: {\n    defaultProps: {\n      disableSpacing: true,\n    },\n    styleOverrides: {\n      root: {\n        padding: 16,\n        gap: 8,\n      },\n    },\n  },\n};\n",
      "type": "registry:theme"
    },
    {
      "path": "themes/mui-plus/components/chip.ts",
      "content": "import type { ThemeOptions } from \"@mui/material/styles\";\n\nexport const chipTheme: ThemeOptions[\"components\"] = {\n  MuiChip: {\n    styleOverrides: {\n      root: ({ theme }) => ({\n        borderRadius: 6,\n        fontWeight: 400,\n        fontSize: theme.typography.body2.fontSize,\n        \"&.Mui-focusVisible\": {\n          outline: \"2px solid\",\n          outlineColor: (theme.vars || theme).palette.text.primary,\n          outlineOffset: \"2px\",\n        },\n        variants: [\n          {\n            props: { variant: \"outlined\", color: \"primary\" },\n            style: {\n              color: (theme.vars || theme).palette.primary.text,\n            },\n          },\n          {\n            props: { variant: \"outlined\", color: \"secondary\" },\n            style: {\n              color: (theme.vars || theme).palette.secondary.text,\n            },\n          },\n          {\n            props: { variant: \"outlined\", color: \"success\" },\n            style: {\n              color: (theme.vars || theme).palette.success.text,\n            },\n          },\n          {\n            props: { variant: \"outlined\", color: \"error\" },\n            style: {\n              color: (theme.vars || theme).palette.error.text,\n            },\n          },\n          {\n            props: { variant: \"outlined\", color: \"warning\" },\n            style: {\n              color: (theme.vars || theme).palette.warning.text,\n            },\n          },\n          {\n            props: { variant: \"outlined\", color: \"info\" },\n            style: {\n              color: (theme.vars || theme).palette.info.text,\n            },\n          },\n          // Filled variant for success, error, warning, info\n          {\n            props: { variant: \"filled\" },\n            style: {\n              ...theme.applyStyles(\"dark\", {\n                \"--_p\": \"60%\",\n              }),\n            },\n          },\n          {\n            props: { variant: \"filled\", color: \"success\" },\n            style: {\n              color: `color-mix(in oklch, ${\n                (theme.vars || theme).palette.success.text\n              }, ${(theme.vars || theme).palette.common.onBackground} 30%)`,\n              backgroundColor: `color-mix(in oklch, ${\n                (theme.vars || theme).palette.success.main\n              }, ${\n                (theme.vars || theme).palette.common.background\n              } var(--_p, 80%))`,\n            },\n          },\n          {\n            props: { variant: \"filled\", color: \"error\" },\n            style: {\n              color: `color-mix(in oklch, ${\n                (theme.vars || theme).palette.error.text\n              }, ${(theme.vars || theme).palette.common.onBackground} 30%)`,\n              backgroundColor: `color-mix(in oklch, ${\n                (theme.vars || theme).palette.error.main\n              }, ${\n                (theme.vars || theme).palette.common.background\n              } var(--_p, 80%))`,\n            },\n          },\n          {\n            props: { variant: \"filled\", color: \"warning\" },\n            style: {\n              color: `color-mix(in oklch, ${\n                (theme.vars || theme).palette.warning.text\n              }, ${(theme.vars || theme).palette.common.onBackground} 30%)`,\n              backgroundColor: `color-mix(in oklch, ${\n                (theme.vars || theme).palette.warning.main\n              }, ${\n                (theme.vars || theme).palette.common.background\n              } var(--_p, 80%))`,\n            },\n          },\n          {\n            props: { variant: \"filled\", color: \"info\" },\n            style: {\n              color: `color-mix(in oklch, ${\n                (theme.vars || theme).palette.info.text\n              }, ${(theme.vars || theme).palette.common.onBackground} 30%)`,\n              backgroundColor: `color-mix(in oklch, ${\n                (theme.vars || theme).palette.info.main\n              }, ${\n                (theme.vars || theme).palette.common.background\n              } var(--_p, 80%))`,\n            },\n          },\n          {\n            props: { clickable: true },\n            style: {\n              \"&:active\": {\n                transform: \"scale(0.98)\",\n              },\n            },\n          },\n        ],\n      }),\n      icon: {\n        fontSize: \"1.125rem\",\n        variants: [\n          {\n            props: { size: \"small\" },\n            style: {\n              fontSize: \"1rem\",\n            },\n          },\n        ],\n      },\n      deleteIcon: ({ theme }) => ({\n        \"&:active\": {\n          transform: \"scale(0.97)\",\n        },\n        variants: [\n          {\n            props: { color: \"default\" },\n            style: {\n              color: (theme.vars || theme).palette.text.icon,\n              \"&:hover\": {\n                color: (theme.vars || theme).palette.text.secondary,\n              },\n            },\n          },\n        ],\n      }),\n    },\n  },\n};\n",
      "type": "registry:theme"
    },
    {
      "path": "themes/mui-plus/components/controls.ts",
      "content": "import type { ThemeOptions } from \"@mui/material/styles\";\nimport { switchClasses } from \"@mui/material/Switch\";\n\nconst borderWidth = 1;\n\nexport const controlsTheme: ThemeOptions[\"components\"] = {\n  MuiSwitch: {\n    styleOverrides: {\n      root: ({ theme }) => ({\n        \"--_h\": \"34px\",\n        \"--_w\": \"56px\",\n        \"--_inset\": \"3px\",\n        \"--_b\": \"1px\",\n        \"--_thumb-size\": \"calc(var(--_h) - var(--_b) * 2 - var(--_inset) * 2)\",\n        \"--_thumb-w\": \"var(--_thumb-size)\",\n        \"--_thumb-h\": \"var(--_thumb-size)\",\n        \"--plus-opacity-switchTrackDisabled\": \"0.5\",\n        width: \"var(--_w)\",\n        height: \"var(--_h)\",\n        padding: 0,\n        borderRadius: \"var(--_h)\",\n        \"&:has(.Mui-focusVisible)\": {\n          outline: \"2px solid\",\n          outlineOffset: \"4px\",\n          outlineColor: (theme.vars || theme).palette.text.primary,\n        },\n        variants: [\n          {\n            props: { size: \"small\" },\n            style: {\n              \"--_h\": \"28px\",\n              \"--_w\": \"44px\",\n              \"--_inset\": \"2px\",\n            },\n          },\n        ],\n        [`& .${switchClasses.switchBase}`]: {\n          padding: borderWidth,\n          top: \"var(--_inset)\",\n          left: \"var(--_inset)\",\n          [`&.${switchClasses.checked}`]: {\n            color: (theme.vars || theme).palette.common.white,\n            transform: `translateX(calc(var(--_w) - var(--_thumb-w) - var(--_b) * 2 - var(--_inset) * 2))`,\n            ...theme.applyStyles(\"dark\", {\n              [`& .${switchClasses.thumb}`]: {\n                background: (theme.vars || theme).palette.grey[900],\n              },\n            }),\n          },\n          [`&.${switchClasses.checked}:not(.Mui-disabled) + .${switchClasses.track}`]:\n            {\n              opacity: 1,\n              border: \"none\",\n            },\n          \"&:active\": {\n            \"--_thumb-w\": \"calc(var(--_thumb-size) + 4px)\",\n          },\n          \"&.Mui-disabled\": {\n            [`& .${switchClasses.thumb}`]: {\n              opacity: \"var(--plus-opacity-switchTrackDisabled)\",\n            },\n          },\n        },\n        [`& .${switchClasses.thumb}`]: {\n          borderRadius: \"var(--_thumb-size)\",\n          background: (theme.vars || theme).palette.common.white,\n          width: \"var(--_thumb-w)\",\n          height: \"var(--_thumb-h)\",\n          boxShadow:\n            \"0 3px 8px 0 rgba(0,0,0,0.1), 0 1px 1px 0 rgba(0,0,0,0.12), 0 3px 1px 0 rgba(0,0,0,0.08)\",\n          transition: \"width 120ms ease-out 0ms\",\n        },\n        [`& .${switchClasses.track}`]: {\n          borderRadius: \"var(--_thumb-size)\",\n          border: `solid ${(theme.vars || theme).palette.grey[300]}`,\n          borderWidth,\n          backgroundColor: (theme.vars || theme).palette.grey[300],\n          opacity: 1,\n          transition: \"none\",\n          ...theme.applyStyles(\"dark\", {\n            border: `solid ${(theme.vars || theme).palette.grey[700]}`,\n            backgroundColor: (theme.vars || theme).palette.grey[900],\n          }),\n        },\n      }),\n    },\n  },\n  MuiFormControlLabel: {\n    styleOverrides: {\n      root: ({ theme }) => ({\n        gap: \"var(--_gap)\",\n        [`&:has(.${switchClasses.root})`]: {\n          \"--_gap\": theme.spacing(1),\n          margin: 0,\n        },\n      }),\n    },\n  },\n};\n",
      "type": "registry:theme"
    },
    {
      "path": "themes/mui-plus/components/data-grid.ts",
      "content": "import type { ThemeOptions } from \"@mui/material/styles\";\nimport type {} from \"@mui/x-data-grid/themeAugmentation\";\n\nexport const dataGridTheme: ThemeOptions[\"components\"] = {\n  MuiDataGrid: {\n    styleOverrides: {\n      root: ({ theme }) => ({\n        borderRadius: theme.shape.borderRadius,\n        border: `1px solid ${(theme.vars || theme).palette.divider}`,\n        backgroundColor: (theme.vars || theme).palette.background.paper,\n      }),\n      cell: ({ theme }) => ({\n        borderBottomColor: (theme.vars || theme).palette.divider,\n        fontSize: theme.typography.body2.fontSize,\n        padding: \"0 16px\",\n        \"&:focus\": {\n          outline: \"none\",\n        },\n        \"&:focus-within\": {\n          outline: `2px solid ${(theme.vars || theme).palette.primary.main}`,\n          outlineOffset: -2,\n        },\n      }),\n      columnHeader: ({ theme }) => ({\n        backgroundColor: `color-mix(in srgb, ${\n          (theme.vars || theme).palette.secondary.main\n        }, ${(theme.vars || theme).palette.common.background} 60%)`,\n        borderBottomColor: (theme.vars || theme).palette.divider,\n        fontSize: theme.typography.body2.fontSize,\n        fontWeight: 600,\n        color: (theme.vars || theme).palette.text.primary,\n        \"&:focus\": {\n          outline: \"none\",\n        },\n        \"&:focus-within\": {\n          outline: `2px solid ${(theme.vars || theme).palette.primary.main}`,\n          outlineOffset: -2,\n        },\n      }),\n      columnSeparator: ({ theme }) => ({\n        color: (theme.vars || theme).palette.divider,\n      }),\n      menuIconButton: {\n        opacity: 0.5,\n        \"&:hover\": {\n          opacity: 1,\n        },\n      },\n      iconButtonContainer: {\n        \"& .MuiIconButton-root\": {\n          padding: 4,\n        },\n      },\n      row: ({ theme }) => ({\n        \"&:hover\": {\n          backgroundColor: (theme.vars || theme).palette.action.hover,\n        },\n        \"&.Mui-selected\": {\n          backgroundColor: (theme.vars || theme).palette.action.selected,\n          \"&:hover\": {\n            backgroundColor: (theme.vars || theme).palette.action.selected,\n          },\n        },\n      }),\n      footerContainer: ({ theme }) => ({\n        borderTop: `1px solid ${(theme.vars || theme).palette.divider}`,\n        minHeight: 52,\n      }),\n      checkboxInput: {\n        padding: 4,\n      },\n      columnHeaderTitle: {\n        fontWeight: 600,\n      },\n      toolbarContainer: ({ theme }) => ({\n        padding: \"16px\",\n        gap: 16,\n        borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n      }),\n      virtualScroller: {\n        \"&::-webkit-scrollbar\": {\n          width: \"8px\",\n          height: \"8px\",\n        },\n        \"&::-webkit-scrollbar-track\": {\n          backgroundColor: \"transparent\",\n        },\n        \"&::-webkit-scrollbar-thumb\": {\n          backgroundColor: \"rgba(0, 0, 0, 0.2)\",\n          borderRadius: \"4px\",\n          \"&:hover\": {\n            backgroundColor: \"rgba(0, 0, 0, 0.3)\",\n          },\n        },\n      },\n      overlayWrapper: {\n        minHeight: 240,\n      },\n      overlay: ({ theme }) => ({\n        backgroundColor: \"rgba(255, 255, 255, 0.9)\",\n        ...theme.applyStyles(\"dark\", {\n          backgroundColor: \"rgba(0, 0, 0, 0.9)\",\n        }),\n      }),\n    },\n  },\n};\n",
      "type": "registry:theme"
    },
    {
      "path": "themes/mui-plus/components/date-picker.ts",
      "content": "import type { ThemeOptions } from \"@mui/material/styles\";\nimport type {} from \"@mui/x-date-pickers/themeAugmentation\";\nimport type {} from \"@mui/x-date-pickers-pro/themeAugmentation\";\n\nexport const datePickerTheme: ThemeOptions[\"components\"] = {\n  MuiPickersTextField: {\n    defaultProps: {\n      variant: \"outlined\",\n    },\n    styleOverrides: {\n      root: ({ theme }) => ({\n        variants: [\n          {\n            props: { variant: \"outlined\" },\n            style: {\n              \"& .MuiFormLabel-root, & .MuiInputLabel-root.MuiInputLabel-shrink\":\n                {\n                  position: \"static\",\n                  transform: \"none\",\n                  pointerEvents: \"auto\",\n                  marginBottom: \"0.25rem\",\n                  maxWidth: \"unset\",\n                  fontWeight: 500,\n                  lineHeight: 1.5,\n                  color: (theme.vars || theme).palette.text.primary,\n                },\n              \"& .MuiPickersSectionList-root\": {\n                paddingBlock: \"9.5px\",\n              },\n              \"& .MuiPickersSectionList-section\": {\n                lineHeight: 1.5,\n              },\n              \"& .MuiIconButton-root\": {\n                \"&:hover\": {\n                  color: (theme.vars || theme).palette.text.primary,\n                  backgroundColor: \"transparent\",\n                },\n              },\n              // size small\n              \"& .MuiPickersInputBase-inputSizeSmall\": {\n                \"& .MuiPickersSectionList-root\": {\n                  paddingBlock: \"6.5px\",\n                },\n                \"& .MuiIconButton-root\": {\n                  padding: \"4px\",\n                },\n              },\n              \"&&& .MuiPickersInputBase-input\": {\n                \"&::-webkit-input-placeholder\": {\n                  opacity: \"0.42 !important\",\n                },\n                \"&::-moz-placeholder\": {\n                  opacity: \"0.42 !important\",\n                },\n                \"&::-ms-input-placeholder\": {\n                  opacity: \"0.42 !important\",\n                },\n              },\n              \"&& .MuiPickersOutlinedInput-notchedOutline\": {\n                transition: \"none\",\n                \"& legend\": {\n                  width: 0,\n                },\n              },\n            },\n          },\n          {\n            props: { variant: \"outlined\", size: \"small\" },\n            style: {\n              \"& .MuiPickersInputBase-input:where(input)\": {\n                paddingBlock: \"6.5px\",\n                paddingInline: \"12px\",\n              },\n            },\n          },\n        ],\n      }),\n    },\n  },\n  MuiPickersInputBase: {\n    styleOverrides: {\n      root: ({ theme }) => ({\n        fontSize: theme.typography.body2.fontSize,\n        variants: [\n          {\n            props: { size: \"small\" },\n            style: {\n              fontSize: theme.typography.body2.fontSize,\n            },\n          },\n        ],\n      }),\n    },\n  },\n  MuiPickersDay: {\n    styleOverrides: {\n      root: ({ theme }) => ({\n        borderRadius: (theme.vars || theme).shape.borderRadius,\n        \"&.MuiPickersDay-today\": {\n          border: `1px solid ${(theme.vars || theme).palette.primary.main}`,\n          \"&:not(.Mui-selected)\": {\n            backgroundColor: \"transparent\",\n          },\n        },\n      }),\n    },\n  },\n  MuiPickersCalendarHeader: {\n    styleOverrides: {\n      root: {\n        \"& .MuiPickersCalendarHeader-label\": {\n          fontWeight: 500,\n        },\n      },\n      switchViewButton: {\n        marginRight: 0,\n      },\n    },\n  },\n  MuiPickersToolbar: {\n    styleOverrides: {\n      root: ({ theme }) => ({\n        borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n      }),\n    },\n  },\n  MuiPickerPopper: {\n    styleOverrides: {\n      paper: ({ theme }) => ({\n        marginTop: 8,\n        border: `1px solid ${(theme.vars || theme).palette.divider}`,\n      }),\n    },\n  },\n};\n",
      "type": "registry:theme"
    },
    {
      "path": "themes/mui-plus/components/dialog.ts",
      "content": "import type { ThemeOptions } from \"@mui/material/styles\";\n\nexport const dialogTheme: ThemeOptions[\"components\"] = {\n  MuiDialog: {\n    styleOverrides: {\n      root: ({ theme }) => ({\n        \"--_spacing-row\": \"16px\",\n        \"--_spacing-col\": \"20px\",\n        \"--_edge\": \"16px\",\n        [theme.breakpoints.up(\"md\")]: {\n          \"--_spacing-row\": \"20px\",\n          \"--_spacing-col\": \"24px\",\n        },\n      }),\n      paper: ({ theme }) => ({\n        \"&:not(.MuiDialog-paperFullScreen)\": {\n          borderRadius: theme.shape.borderRadius,\n          boxShadow: theme.shadows[8],\n          width: \"calc(100% - var(--_edge))\",\n          margin: \"var(--_edge)\",\n        },\n      }),\n    },\n  },\n  MuiDialogTitle: {\n    styleOverrides: {\n      root: {\n        padding: \"var(--_spacing-row) var(--_spacing-col)\",\n        fontSize: \"1.25rem\",\n        fontWeight: 500,\n      },\n    },\n  },\n  MuiDialogContent: {\n    styleOverrides: {\n      root: {\n        padding: \"0 var(--_spacing-col) var(--_spacing-row)\",\n      },\n      dividers: ({ theme }) => ({\n        padding: \"var(--_spacing-row) var(--_spacing-col)\",\n        borderTop: \"1px solid\",\n        borderBottom: \"1px solid\",\n        borderColor: (theme.vars || theme).palette.divider,\n      }),\n    },\n  },\n  MuiDialogActions: {\n    defaultProps: {\n      disableSpacing: true,\n    },\n    styleOverrides: {\n      root: {\n        padding: \"0px var(--_spacing-col) var(--_spacing-row)\",\n        gap: 8,\n        \".MuiDialogContent-dividers + &\": {\n          paddingTop: \"var(--_spacing-row)\",\n        },\n      },\n    },\n  },\n  MuiDialogContentText: {\n    styleOverrides: {\n      root: ({ theme }) => ({\n        color: theme.vars.palette.text.secondary,\n        marginBottom: 0,\n      }),\n    },\n  },\n};\n",
      "type": "registry:theme"
    },
    {
      "path": "themes/mui-plus/components/layout.ts",
      "content": "import type { ThemeOptions } from \"@mui/material/styles\";\n\nexport const layoutTheme: ThemeOptions[\"components\"] = {\n  MuiStack: {\n    defaultProps: {\n      useFlexGap: true,\n    },\n  },\n};\n",
      "type": "registry:theme"
    },
    {
      "path": "themes/mui-plus/components/link.ts",
      "content": "import type { ThemeOptions } from \"@mui/material/styles\";\n\nexport const linkTheme: ThemeOptions[\"components\"] = {\n  MuiLink: {\n    styleOverrides: {\n      root: {\n        \"&:focus-visible\": {\n          outlineOffset: \"4px\",\n          outlineColor: \"var(--Link-underlineColor)\",\n        },\n      },\n    },\n  },\n};\n",
      "type": "registry:theme"
    },
    {
      "path": "themes/mui-plus/components/menu.ts",
      "content": "import type { ThemeOptions } from \"@mui/material/styles\";\n\nexport const menuTheme: ThemeOptions[\"components\"] = {\n  MuiMenu: {\n    defaultProps: {\n      PaperProps: {\n        elevation: 0,\n        variant: \"outlined\",\n      },\n    },\n    styleOverrides: {\n      paper: ({ theme }) => ({\n        marginTop: 4,\n        borderRadius: 8,\n        border: `1px solid ${(theme.vars || theme).palette.divider}`,\n        boxShadow: (theme.vars || theme).shadows[8],\n      }),\n      list: {\n        padding: \"6px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: \"4px\",\n      },\n    },\n  },\n  MuiMenuItem: {\n    styleOverrides: {\n      root: ({ theme }) => ({\n        fontSize: theme.typography.body2.fontSize,\n        padding: \"6px\",\n        borderRadius: 4,\n        minHeight: 40,\n        margin: 0,\n        transition: theme.transitions.create([\"background-color\"], {\n          duration: theme.transitions.duration.shortest,\n        }),\n        \"&:hover\": {\n          backgroundColor: (theme.vars || theme).palette.action.hover,\n        },\n        \"&.Mui-selected\": {\n          backgroundColor: (theme.vars || theme).palette.action.selected,\n          \"&:hover\": {\n            backgroundColor: (theme.vars || theme).palette.action.selected,\n          },\n        },\n        \"&.Mui-focusVisible\": {\n          backgroundColor: (theme.vars || theme).palette.action.focus,\n        },\n        variants: [\n          {\n            props: { dense: true },\n            style: {\n              padding: \"4px 8px\",\n            },\n          },\n        ],\n      }),\n    },\n  },\n};\n",
      "type": "registry:theme"
    },
    {
      "path": "themes/mui-plus/components/select.ts",
      "content": "import type { ThemeOptions } from \"@mui/material/styles\";\n\nexport const selectTheme: ThemeOptions[\"components\"] = {\n  MuiSelect: {\n    defaultProps: {\n      variant: \"outlined\",\n    },\n    styleOverrides: {\n      select: {\n        \"&.MuiOutlinedInput-input\": {\n          padding: \"10px 14px\",\n          minHeight: \"1.42857em\", // 20px\n          \"&.MuiInputBase-inputSizeSmall\": {\n            padding: \"7px 14px\",\n          },\n        },\n        \"&.MuiFilledInput-input\": {\n          padding: \"25px 12px 8px\",\n          \"&.MuiInputBase-inputSizeSmall\": {\n            padding: \"21px 10px 4px\",\n          },\n        },\n        \"&.MuiInputBase-input.MuiInputBase-input\": {\n          paddingRight: 32,\n        },\n      },\n      icon: ({ theme }) => ({\n        color: (theme.vars || theme).palette.text.secondary,\n        right: 8,\n        transition: theme.transitions.create([\"transform\"], {\n          duration: theme.transitions.duration.shorter,\n        }),\n      }),\n      iconOpen: {\n        transform: \"rotate(180deg)\",\n      },\n    },\n  },\n};\n",
      "type": "registry:theme"
    },
    {
      "path": "themes/mui-plus/components/svg-icon.ts",
      "content": "import type { ThemeOptions } from \"@mui/material/styles\";\n\nexport const svgIconTheme: ThemeOptions[\"components\"] = {\n  MuiSvgIcon: {\n    styleOverrides: {\n      root: ({ theme }) => ({\n        color: `var(--Icon-color, ${(theme.vars || theme).palette.text.icon})`,\n        variants: [\n          {\n            props: { fontSize: \"small\" },\n            style: {\n              fontSize: \"var(--Icon-size, 1.125rem)\", // 18px\n            },\n          },\n          {\n            props: { fontSize: \"medium\" },\n            style: {\n              fontSize: \"var(--Icon-size, 1.25rem)\", // 20px\n            },\n          },\n          {\n            props: { fontSize: \"large\" },\n            style: {\n              fontSize: \"var(--Icon-size, 2rem)\", // 32px\n            },\n          },\n          {\n            props: { color: \"primary\" },\n            style: {\n              \"--Icon-color\": (theme.vars || theme).palette.primary.main,\n            },\n          },\n          {\n            props: { color: \"secondary\" },\n            style: {\n              \"--Icon-color\": (theme.vars || theme).palette.secondary.main,\n            },\n          },\n          {\n            props: { color: \"success\" },\n            style: {\n              \"--Icon-color\": (theme.vars || theme).palette.success.main,\n            },\n          },\n          {\n            props: { color: \"error\" },\n            style: {\n              \"--Icon-color\": (theme.vars || theme).palette.error.main,\n            },\n          },\n          {\n            props: { color: \"warning\" },\n            style: {\n              \"--Icon-color\": (theme.vars || theme).palette.warning.main,\n            },\n          },\n          {\n            props: { color: \"info\" },\n            style: {\n              \"--Icon-color\": (theme.vars || theme).palette.info.main,\n            },\n          },\n        ],\n      }),\n    },\n  },\n};\n",
      "type": "registry:theme"
    },
    {
      "path": "themes/mui-plus/components/table.ts",
      "content": "import type { ThemeOptions } from \"@mui/material/styles\";\n\nexport const tableTheme: ThemeOptions[\"components\"] = {\n  MuiTable: {\n    styleOverrides: {\n      root: {\n        tableLayout: \"fixed\",\n      },\n    },\n  },\n  MuiTableCell: {\n    styleOverrides: {\n      root: ({ theme }) => ({\n        borderBottomColor: (theme.vars || theme).palette.divider,\n        fontSize: theme.typography.body2.fontSize,\n        padding: \"14px 24px 14px 12px\",\n      }),\n      head: ({ theme }) => ({\n        fontWeight: 600,\n        color: (theme.vars || theme).palette.text.primary,\n        backgroundColor: `color-mix(in srgb, ${\n          (theme.vars || theme).palette.secondary.main\n        }, ${(theme.vars || theme).palette.common.background} 60%)`,\n      }),\n      sizeSmall: {\n        padding: \"6px 16px 6px 12px\",\n      },\n    },\n  },\n  MuiTableRow: {\n    styleOverrides: {\n      root: ({ theme }) => ({\n        \"tbody > &:last-child td, tbody > &:last-child th\": {\n          borderBottom: 0,\n        },\n        \"&.MuiTableRow-hover:hover\": {\n          backgroundColor: (theme.vars || theme).palette.action.hover,\n        },\n        \"&.Mui-selected\": {\n          backgroundColor: (theme.vars || theme).palette.action.selected,\n          \"&:hover\": {\n            backgroundColor: (theme.vars || theme).palette.action.selected,\n          },\n        },\n      }),\n    },\n  },\n  MuiTableContainer: {\n    styleOverrides: {\n      root: ({ theme }) => ({\n        borderRadius: theme.shape.borderRadius,\n        border: `1px solid ${(theme.vars || theme).palette.divider}`,\n      }),\n    },\n  },\n  MuiTablePagination: {\n    styleOverrides: {\n      root: ({ theme }) => ({\n        borderTop: `1px solid ${(theme.vars || theme).palette.divider}`,\n      }),\n      select: ({ theme }) => ({\n        fontSize: theme.typography.body2.fontSize,\n      }),\n      selectLabel: ({ theme }) => ({\n        fontSize: theme.typography.body2.fontSize,\n      }),\n      displayedRows: ({ theme }) => ({\n        fontSize: theme.typography.body2.fontSize,\n      }),\n    },\n  },\n  MuiTableSortLabel: {\n    styleOverrides: {\n      root: ({ theme }) => ({\n        fontWeight: 600,\n        \"&:hover\": {\n          color: (theme.vars || theme).palette.text.primary,\n        },\n        \"&.Mui-active\": {\n          color: (theme.vars || theme).palette.text.primary,\n        },\n      }),\n      icon: ({ theme }) => ({\n        fontSize: \"1.125rem\",\n        color: (theme.vars || theme).palette.text.secondary,\n      }),\n    },\n  },\n};\n",
      "type": "registry:theme"
    },
    {
      "path": "themes/mui-plus/components/text-field.ts",
      "content": "import type { ThemeOptions } from \"@mui/material/styles\";\n\nexport const textFieldTheme: ThemeOptions[\"components\"] = {\n  MuiFormControl: {\n    defaultProps: {\n      variant: \"outlined\",\n    },\n    styleOverrides: {\n      root: ({ theme }) => ({\n        variants: [\n          {\n            props: { variant: \"outlined\" },\n            style: {\n              \"&&& .MuiInputBase-input\": {\n                \"&::-webkit-input-placeholder\": {\n                  opacity: \"0.42 !important\",\n                },\n                \"&::-moz-placeholder\": {\n                  opacity: \"0.42 !important\",\n                },\n                \"&::-ms-input-placeholder\": {\n                  opacity: \"0.42 !important\",\n                },\n              },\n              \"&& .MuiOutlinedInput-notchedOutline\": {\n                transition: \"none\",\n                \"& legend\": {\n                  width: 0,\n                },\n              },\n              \"& .MuiIconButton-root\": {\n                \"&:hover\": {\n                  color: (theme.vars || theme).palette.text.primary,\n                  backgroundColor: \"transparent\",\n                },\n              },\n            },\n          },\n        ],\n      }),\n    },\n  },\n  MuiInputBase: {\n    styleOverrides: {\n      root: ({ theme }) => ({\n        [theme.breakpoints.up(768)]: {\n          fontSize: theme.typography.body2.fontSize,\n          lineHeight: \"1.42857em\", // 20px\n        },\n      }),\n      input: () => ({\n        padding: \"8px 12px\",\n        minHeight: \"1.5em\",\n        variants: [\n          {\n            props: { size: \"small\" },\n            style: {\n              padding: \"4px 10px\",\n            },\n          },\n          {\n            props: { multiline: true },\n            style: {\n              padding: 0,\n            },\n          },\n        ],\n      }),\n    },\n  },\n  MuiOutlinedInput: {\n    styleOverrides: {\n      root: ({ theme }) => ({\n        \"& .MuiOutlinedInput-notchedOutline\": {\n          transition: theme.transitions.create([\"border-color\"], {\n            duration: theme.transitions.duration.shorter,\n          }),\n        },\n        \"&:hover .MuiOutlinedInput-notchedOutline\": {\n          borderColor: (theme.vars || theme).palette.text.primary,\n        },\n        \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n          borderWidth: 2,\n          borderColor: (theme.vars || theme).palette.primary.main,\n        },\n        \"&.Mui-error .MuiOutlinedInput-notchedOutline\": {\n          borderColor: (theme.vars || theme).palette.error.main,\n        },\n        \"&.Mui-disabled\": {\n          backgroundColor: (theme.vars || theme).palette.action\n            .disabledBackground,\n          \"& .MuiOutlinedInput-notchedOutline\": {\n            borderColor: (theme.vars || theme).palette.action.disabled,\n          },\n        },\n        variants: [\n          {\n            props: { multiline: true },\n            style: {\n              padding: \"8px 12px\",\n            },\n          },\n          {\n            props: { size: \"small\", multiline: true },\n            style: {\n              padding: \"4px 10px\",\n            },\n          },\n        ],\n      }),\n      input: {\n        paddingBlock: \"9.5px\",\n        variants: [\n          {\n            props: { size: \"small\" },\n            style: {\n              paddingBlock: \"6.5px\",\n            },\n          },\n          {\n            props: { multiline: true },\n            style: {\n              padding: 0,\n            },\n          },\n        ],\n      },\n      notchedOutline: {\n        borderRadius: 8,\n      },\n    },\n  },\n  MuiFilledInput: {\n    styleOverrides: {\n      root: ({ theme }) => ({\n        backgroundColor: (theme.vars || theme).palette.action.hover,\n        borderRadius: \"8px 8px 0 0\",\n        \"&:hover\": {\n          backgroundColor: (theme.vars || theme).palette.action.selected,\n        },\n        \"&.Mui-focused\": {\n          backgroundColor: (theme.vars || theme).palette.action.selected,\n        },\n        \"&.Mui-disabled\": {\n          backgroundColor: (theme.vars || theme).palette.action\n            .disabledBackground,\n        },\n        \"&::before\": {\n          transition: theme.transitions.create([\"border-bottom-color\"], {\n            duration: theme.transitions.duration.shorter,\n          }),\n        },\n        \"&:hover::before\": {\n          borderBottom: `2px solid ${\n            (theme.vars || theme).palette.text.primary\n          }`,\n        },\n        \"&::after\": {\n          borderBottom: `2px solid ${\n            (theme.vars || theme).palette.primary.main\n          }`,\n        },\n        \"&.Mui-error::after\": {\n          borderBottomColor: (theme.vars || theme).palette.error.main,\n        },\n      }),\n      input: () => ({\n        \"&:where(input)\": {\n          padding: \"25px 12px 8px\",\n        },\n        variants: [\n          {\n            props: { size: \"small\" },\n            style: {\n              \"&:where(input)\": {\n                padding: \"21px 10px 4px\",\n              },\n            },\n          },\n        ],\n      }),\n    },\n  },\n  MuiInput: {\n    styleOverrides: {\n      root: ({ theme }) => ({\n        \"&::before\": {\n          transition: theme.transitions.create([\"border-bottom-color\"], {\n            duration: theme.transitions.duration.shorter,\n          }),\n        },\n        \"&:hover:not(.Mui-disabled)::before\": {\n          borderBottom: `2px solid ${\n            (theme.vars || theme).palette.text.primary\n          }`,\n        },\n        \"&::after\": {\n          borderBottom: `2px solid ${\n            (theme.vars || theme).palette.primary.main\n          }`,\n        },\n        \"&.Mui-error::after\": {\n          borderBottomColor: (theme.vars || theme).palette.error.main,\n        },\n      }),\n      input: {\n        padding: \"4px 0 5px\",\n      },\n    },\n  },\n  MuiInputLabel: {\n    styleOverrides: {\n      root: ({ theme }) => ({\n        fontSize: theme.typography.body2.fontSize,\n      }),\n      outlined: ({ theme }) => ({\n        color: (theme.vars || theme).palette.text.primary,\n        \"&.Mui-focused\": {\n          color: (theme.vars || theme).palette.primary.main,\n        },\n        \"&.Mui-disabled\": {\n          color: (theme.vars || theme).palette.text.disabled,\n        },\n        \"&.MuiFormLabel-root\": {\n          position: \"static\",\n          transform: \"none\",\n          pointerEvents: \"auto\",\n          marginBottom: \"0.25rem\",\n          maxWidth: \"unset\",\n          fontWeight: 500,\n          lineHeight: 1.5,\n          \"&.MuiInputLabel-shrink\": {\n            transform: \"none\",\n          },\n        },\n        variants: [\n          {\n            props: { size: \"small\" },\n            style: {\n              transform: \"translate(14px, 7px) scale(1)\",\n              \"&.MuiInputLabel-shrink\": {\n                transform: \"translate(14px, -9px) scale(0.75)\",\n              },\n            },\n          },\n        ],\n      }),\n      filled: {\n        transform: \"translate(12px, 16px) scale(1)\",\n        \"&.MuiInputLabel-shrink\": {\n          transform: \"translate(12px, 7px) scale(0.75)\",\n        },\n        variants: [\n          {\n            props: { size: \"small\" },\n            style: {\n              transform: \"translate(12px, 14px) scale(1)\",\n              \"&.MuiInputLabel-shrink\": {\n                transform: \"translate(10px, 6px) scale(0.75)\",\n              },\n            },\n          },\n        ],\n      },\n    },\n  },\n  MuiFormHelperText: {\n    styleOverrides: {\n      root: ({ theme }) => ({\n        marginTop: 4,\n        lineHeight: \"calc(20/12)\",\n        \"&.Mui-error\": {\n          color: (theme.vars || theme).palette.error.text,\n        },\n      }),\n    },\n  },\n  MuiInputAdornment: {\n    styleOverrides: {\n      root: ({ theme }) => ({\n        color: (theme.vars || theme).palette.text.secondary,\n        variants: [\n          {\n            props: { position: \"start\" },\n            style: {\n              marginRight: 8,\n            },\n          },\n          {\n            props: { position: \"end\" },\n            style: {\n              marginLeft: 8,\n            },\n          },\n        ],\n      }),\n    },\n  },\n};\n",
      "type": "registry:theme"
    },
    {
      "path": "themes/mui-plus/components/tree-view.ts",
      "content": "import type { ThemeOptions } from \"@mui/material/styles\";\nimport type {} from \"@mui/x-tree-view/themeAugmentation\";\n\nexport const treeViewTheme: ThemeOptions[\"components\"] = {\n  MuiTreeItem: {\n    styleOverrides: {\n      content: ({ theme }) => ({\n        \"&[data-selected]\": {\n          \"--Icon-color\": \"currentColor\",\n          backgroundColor: \"transparent\",\n          \"&[data-focused]\": {\n            backgroundColor: (theme.vars || theme).palette.action.hover,\n          },\n          \"& .MuiTreeItem-label\": {\n            fontWeight: \"bold\",\n          },\n        },\n      }),\n    },\n  },\n};\n",
      "type": "registry:theme"
    },
    {
      "path": "themes/mui-plus/index.ts",
      "content": "export { default } from \"./mui-plus\";\n",
      "type": "registry:theme"
    },
    {
      "path": "themes/mui-plus/mui-plus.ts",
      "content": "\"use client\";\nimport {\n  createTheme,\n  unstable_createBreakpoints as createBreakpoints,\n} from \"@mui/material/styles\";\nimport type {} from \"@mui/material/themeCssVarsAugmentation\";\nimport { buttonTheme } from \"./components/button\";\nimport { textFieldTheme } from \"./components/text-field\";\nimport { selectTheme } from \"./components/select\";\nimport { autocompleteTheme } from \"./components/autocomplete\";\nimport { chipTheme } from \"./components/chip\";\nimport { avatarTheme } from \"./components/avatar\";\nimport { menuTheme } from \"./components/menu\";\nimport { tableTheme } from \"./components/table\";\nimport { cardTheme } from \"./components/card\";\nimport { dialogTheme } from \"./components/dialog\";\nimport { datePickerTheme } from \"./components/date-picker\";\nimport { svgIconTheme } from \"./components/svg-icon\";\nimport { dataGridTheme } from \"./components/data-grid\";\nimport { alertTheme } from \"./components/alert\";\nimport { treeViewTheme } from \"./components/tree-view\";\nimport { layoutTheme } from \"./components/layout\";\nimport { linkTheme } from \"./components/link\";\nimport { controlsTheme } from \"./components/controls\";\n\n// Augment the palette to include custom 'text' property\ndeclare module \"@mui/material/styles\" {\n  interface PaletteColor {\n    text?: string;\n  }\n\n  interface SimplePaletteColorOptions {\n    text?: string;\n  }\n\n  interface TypeText {\n    icon?: string;\n  }\n}\n\nconst breakpoints = createBreakpoints({});\n\n// Responsive heading styles extracted from tailwind-prose configuration\nconst h1Styles = {\n  \"--_fs\": \"2.25rem\",\n  \"--_lh\": \"1.11111111\",\n  fontWeight: 800,\n  fontSize: \"var(--_fs)\",\n  lineHeight: \"var(--_lh)\",\n  [breakpoints.up(\"sm\")]: {\n    \"--_fs\": \"3rem\",\n    \"--_lh\": \"1\",\n  },\n  [breakpoints.up(\"md\")]: {\n    \"--_fs\": \"3.5rem\",\n  },\n  [breakpoints.up(\"xl\")]: {\n    \"--_fs\": \"4rem\",\n  },\n};\n\nconst h2Styles = {\n  \"--_fs\": \"1.5rem\",\n  \"--_lh\": \"1.5\",\n  fontWeight: 700,\n  fontSize: \"var(--_fs)\",\n  lineHeight: \"var(--_lh)\",\n  [breakpoints.up(\"sm\")]: {\n    \"--_fs\": \"1.875rem\",\n  },\n  [breakpoints.up(\"md\")]: {\n    \"--_fs\": \"2.25rem\",\n    \"--_lh\": \"1.11111111\",\n  },\n  [breakpoints.up(\"xl\")]: {\n    \"--_fs\": \"3rem\",\n    \"--_lh\": \"1.08333\",\n  },\n};\n\nconst h3Styles = {\n  \"--_fs\": \"1.25rem\",\n  \"--_lh\": \"1.6\",\n  fontWeight: 600,\n  fontSize: \"var(--_fs)\",\n  lineHeight: \"var(--_lh)\",\n  [breakpoints.up(\"sm\")]: {\n    \"--_fs\": \"1.5rem\",\n    \"--_lh\": \"1.5\",\n  },\n  [breakpoints.up(\"md\")]: {\n    \"--_fs\": \"1.875rem\",\n    \"--_lh\": \"1.33333\",\n  },\n  [breakpoints.up(\"xl\")]: {\n    \"--_fs\": \"2.25rem\",\n    \"--_lh\": \"1.22222\",\n  },\n};\n\nconst h4Styles = {\n  \"--_fs\": \"1.125rem\",\n  \"--_lh\": \"1.55556\",\n  fontWeight: 600,\n  fontSize: \"var(--_fs)\",\n  lineHeight: \"var(--_lh)\",\n  [breakpoints.up(\"sm\")]: {\n    \"--_fs\": \"1.25rem\",\n    \"--_lh\": \"1.55556\",\n  },\n  [breakpoints.up(\"md\")]: {\n    \"--_lh\": \"1.6\",\n  },\n  [breakpoints.up(\"xl\")]: {\n    \"--_lh\": \"1.5\",\n  },\n};\n\nconst theme = createTheme({\n  cssVariables: {\n    colorSchemeSelector: \"class\",\n    cssVarPrefix: \"plus\",\n  },\n  colorSchemes: {\n    light: {\n      palette: {\n        text: {\n          icon: \"rgb(0 0 0 / 0.48)\", // systemGray for icons\n        },\n        action: {\n          activatedOpacity: 0.38, // Reduced from 0.54\n          selectedOpacity: 0.06, // Reduced from 0.08\n          disabledOpacity: 0.2, // Reduced from 0.38\n          focusOpacity: 0.08, // Reduced from 0.12\n        },\n        primary: {\n          main: \"#000\",\n          text: \"#212121\",\n        },\n        secondary: {\n          main: \"rgb(229, 229, 234)\", // systemGray\n          text: \"rgb(108, 108, 112)\", // systemGray increased contrast\n        },\n        success: {\n          main: \"rgb(52, 199, 89)\", // green\n          text: \"rgb(0, 137, 50)\", // green increased contrast\n        },\n        error: {\n          main: \"rgb(255, 56, 60)\", // red\n          text: \"rgb(233, 21, 45)\", // red increased contrast\n        },\n        warning: {\n          main: \"rgb(255, 204, 0)\", // yellow\n          text: \"rgb(161, 106, 0)\", // yellow increased contrast\n        },\n        info: {\n          main: \"rgb(0, 136, 255)\", // blue\n          text: \"rgb(30, 110, 244)\", // blue increased contrast\n        },\n        background: {\n          default: \"rgb(248, 248, 248)\",\n        },\n      },\n    },\n    dark: {\n      palette: {\n        text: {\n          icon: \"rgb(255 255 255 / 0.6)\", // systemGray for icons in dark mode\n        },\n        action: {\n          activatedOpacity: 0.38, // Reduced intensity\n          selectedOpacity: 0.06, // Subtle selection\n          disabledOpacity: 0.2, // Reduced opacity\n          focusOpacity: 0.08, // Subtle focus\n        },\n        primary: {\n          main: \"#fff\",\n          text: \"#f5f5f5\",\n        },\n        secondary: {\n          main: \"rgb(142, 142, 147)\", // systemGray\n          text: \"rgb(174, 174, 178)\", // systemGray for dark mode\n        },\n        success: {\n          main: \"rgb(48, 209, 88)\", // green for dark\n          text: \"rgb(71, 217, 104)\", // green for dark\n        },\n        error: {\n          main: \"rgb(255, 69, 58)\", // red for dark\n          text: \"rgb(255, 97, 101)\", // red for dark\n        },\n        warning: {\n          main: \"rgb(255, 214, 10)\", // yellow for dark\n          text: \"rgb(254, 223, 67)\", // yellow for dark\n        },\n        info: {\n          main: \"rgb(0, 145, 255)\", // blue for dark\n          text: \"rgb(92, 184, 255)\", // blue for dark\n        },\n        background: {\n          default: \"rgb(0, 0, 0)\", // systemGrayDark\n          paper: \"rgb(18, 18, 18)\", // systemGrayDark\n        },\n      },\n    },\n  },\n  shape: {\n    borderRadius: 8,\n  },\n  components: {\n    ...buttonTheme,\n    ...textFieldTheme,\n    ...selectTheme,\n    ...menuTheme,\n    ...autocompleteTheme,\n    ...chipTheme,\n    ...avatarTheme,\n    ...tableTheme,\n    ...cardTheme,\n    ...dialogTheme,\n    ...datePickerTheme,\n    ...svgIconTheme,\n    ...dataGridTheme,\n    ...alertTheme,\n    ...treeViewTheme,\n    ...layoutTheme,\n    ...linkTheme,\n    ...controlsTheme,\n  },\n  typography: {\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n    ].join(\",\"),\n    h1: h1Styles,\n    h2: h2Styles,\n    h3: h3Styles,\n    h4: h4Styles,\n    h5: h4Styles, // use h4 styles since h5 is rarely used\n    h6: h4Styles, // use h4 styles since h6 is rarely used\n    body2: {\n      lineHeight: \"1.4285714286\",\n    },\n  },\n  shadows: [\n    \"none\",\n    \"0 1px 2px 0 rgb(0 0 0 / 0.05)\",\n    \"0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)\",\n    \"0 2px 4px 0 rgb(0 0 0 / 0.06)\",\n    \"0 2px 4px -1px rgb(0 0 0 / 0.06), 0 1px 2px -1px rgb(0 0 0 / 0.04)\",\n    \"0 3px 5px -1px rgb(0 0 0 / 0.07), 0 1px 3px -1px rgb(0 0 0 / 0.05)\",\n    \"0 4px 6px -1px rgb(0 0 0 / 0.07), 0 2px 4px -1px rgb(0 0 0 / 0.05)\",\n    \"0 5px 8px -2px rgb(0 0 0 / 0.08), 0 2px 4px -1px rgb(0 0 0 / 0.05)\",\n    \"0 6px 10px -2px rgb(0 0 0 / 0.08), 0 3px 5px -2px rgb(0 0 0 / 0.06)\",\n    \"0 8px 12px -3px rgb(0 0 0 / 0.09), 0 3px 6px -2px rgb(0 0 0 / 0.06)\",\n    \"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 7px -3px rgb(0 0 0 / 0.07)\",\n    \"0 12px 18px -4px rgb(0 0 0 / 0.11), 0 5px 9px -3px rgb(0 0 0 / 0.08)\",\n    \"0 15px 22px -4px rgb(0 0 0 / 0.12), 0 6px 11px -4px rgb(0 0 0 / 0.09)\",\n    \"0 18px 28px -5px rgb(0 0 0 / 0.13), 0 7px 13px -4px rgb(0 0 0 / 0.1)\",\n    \"0 22px 34px -6px rgb(0 0 0 / 0.14), 0 8px 16px -5px rgb(0 0 0 / 0.11)\",\n    \"0 26px 40px -7px rgb(0 0 0 / 0.15), 0 10px 19px -5px rgb(0 0 0 / 0.12)\",\n    \"0 31px 47px -8px rgb(0 0 0 / 0.16), 0 12px 23px -6px rgb(0 0 0 / 0.13)\",\n    \"0 36px 54px -9px rgb(0 0 0 / 0.17), 0 14px 27px -7px rgb(0 0 0 / 0.14)\",\n    \"0 42px 62px -10px rgb(0 0 0 / 0.18), 0 16px 31px -8px rgb(0 0 0 / 0.15)\",\n    \"0 48px 70px -11px rgb(0 0 0 / 0.2), 0 18px 36px -9px rgb(0 0 0 / 0.16)\",\n    \"0 54px 78px -12px rgb(0 0 0 / 0.21), 0 20px 41px -10px rgb(0 0 0 / 0.17)\",\n    \"0 60px 86px -13px rgb(0 0 0 / 0.22), 0 23px 46px -11px rgb(0 0 0 / 0.18)\",\n    \"0 66px 94px -14px rgb(0 0 0 / 0.23), 0 26px 52px -12px rgb(0 0 0 / 0.19)\",\n    \"0 72px 102px -15px rgb(0 0 0 / 0.24), 0 29px 58px -13px rgb(0 0 0 / 0.2)\",\n    \"0 58px 82px -11px rgb(0 0 0 / 0.26), 0 21px 40px -11px rgb(0 0 0 / 0.22)\",\n  ],\n});\n\nexport default theme;\n",
      "type": "registry:theme"
    }
  ],
  "meta": {
    "screenshot": "/screenshots/mui-plus.png",
    "category": "theme"
  }
}