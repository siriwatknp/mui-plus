{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "portfolio-value-chart",
  "type": "registry:block",
  "title": "Portfolio Value Chart",
  "description": "A portfolio-value-chart block.",
  "dependencies": [
    "@mui/material",
    "@mui/x-charts",
    "@emotion/react",
    "@emotion/styled"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "blocks/portfolio-value-chart/portfolio-value-chart.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport { LineChart } from \"@mui/x-charts/LineChart\";\n\n// Generate mock data for the chart\nconst generateData = () => {\n  const dates = [];\n  const etfData = [];\n  const vitainvestData = [];\n  const ishareData = [];\n  \n  // Generate dates from Aug 25 to Sep 26\n  const startDate = new Date(2024, 7, 25); // August 25\n  const endDate = new Date(2024, 8, 26); // September 26\n  \n  for (let d = new Date(startDate); d <= endDate; d.setDate(d.getDate() + 1)) {\n    dates.push(d.getDate());\n    \n    // Generate realistic portfolio values with more variation\n    const dayIndex = dates.length - 1;\n    const baseETF = 95000 + Math.sin(dayIndex * 0.3) * 8000 + Math.random() * 3000;\n    const baseVita = 85000 + Math.sin(dayIndex * 0.2) * 7000 + dayIndex * 800 + Math.random() * 2500;\n    const baseIshare = 115000 - dayIndex * 500 + Math.sin(dayIndex * 0.25) * 10000 + Math.random() * 4000;\n    \n    etfData.push(baseETF);\n    vitainvestData.push(baseVita);\n    ishareData.push(baseIshare);\n  }\n  \n  return { dates, etfData, vitainvestData, ishareData };\n};\n\nconst { dates, etfData, vitainvestData, ishareData } = generateData();\n\n// Format x-axis labels\nconst xAxisData = dates.map((_, index) => {\n  if (index === 0) return \"Aug 25\";\n  if (index === 4) return \"Aug 29\";\n  if (index === 8) return \"Sep 02\";\n  if (index === 12) return \"Sep 06\";\n  if (index === 16) return \"Sep 10\";\n  if (index === 20) return \"Sep 14\";\n  if (index === 24) return \"Sep 18\";\n  if (index === 28) return \"Sep 22\";\n  if (index === 32) return \"Sep 26\";\n  return \"\";\n});\n\nexport default function PortfolioValueChart() {\n  return (\n    <Card\n      sx={theme => ({\n        p: 3,\n        borderRadius: 2,\n        border: `1px solid`,\n        borderColor: \"divider\",\n        bgcolor: \"background.paper\",\n        boxShadow: \"none\",\n        ...theme.applyStyles(\"dark\", {\n          borderColor: \"divider\",\n        }),\n      })}\n    >\n      <Stack spacing={3}>\n        <Box>\n          <Typography\n            variant=\"body2\"\n            sx={{\n              color: \"text.secondary\",\n              mb: 0.5,\n            }}\n          >\n            Portfolio Value\n          </Typography>\n          <Typography\n            variant=\"h4\"\n            component=\"div\"\n            sx={{\n              fontWeight: 700,\n              color: \"text.primary\",\n            }}\n          >\n            $328,505.10\n          </Typography>\n        </Box>\n\n        <Stack \n          direction=\"row\" \n          spacing={2.5} \n          sx={{ px: 1 }}\n          role=\"list\"\n          aria-label=\"Portfolio legend\"\n        >\n          <Stack direction=\"row\" spacing={1} alignItems=\"center\" role=\"listitem\">\n            <Box\n              sx={{\n                width: 24,\n                height: 3,\n                bgcolor: \"#2196F3\",\n                borderRadius: 1,\n              }}\n              aria-hidden=\"true\"\n            />\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              ETF Shares Vital\n            </Typography>\n          </Stack>\n          <Stack direction=\"row\" spacing={1} alignItems=\"center\" role=\"listitem\">\n            <Box\n              sx={{\n                width: 24,\n                height: 3,\n                bgcolor: \"#00BCD4\",\n                borderRadius: 1,\n              }}\n              aria-hidden=\"true\"\n            />\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Vitainvest Core\n            </Typography>\n          </Stack>\n          <Stack direction=\"row\" spacing={1} alignItems=\"center\" role=\"listitem\">\n            <Box\n              sx={{\n                width: 24,\n                height: 3,\n                bgcolor: \"#9C27B0\",\n                borderRadius: 1,\n              }}\n              aria-hidden=\"true\"\n            />\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              iShares Tech Growth\n            </Typography>\n          </Stack>\n        </Stack>\n\n        <Box \n          sx={{ width: \"100%\", height: 350 }}\n          role=\"img\"\n          aria-label=\"Portfolio performance chart showing ETF Shares Vital, Vitainvest Core, and iShares Tech Growth from August 25 to September 26\"\n        >\n          <LineChart\n            series={[\n              {\n                data: etfData,\n                color: \"#2196F3\",\n                curve: \"catmullRom\",\n                showMark: false,\n              },\n              {\n                data: vitainvestData,\n                color: \"#00BCD4\",\n                curve: \"catmullRom\",\n                showMark: false,\n              },\n              {\n                data: ishareData,\n                color: \"#9C27B0\",\n                curve: \"catmullRom\",\n                showMark: false,\n              },\n            ]}\n            xAxis={[\n              {\n                data: dates,\n                scaleType: \"point\",\n                tickLabelStyle: {\n                  fontSize: 12,\n                  fill: \"var(--mui-palette-text-secondary)\",\n                },\n                tickNumber: 9,\n                valueFormatter: (value) => {\n                  const index = dates.indexOf(value);\n                  return xAxisData[index] || \"\";\n                },\n              },\n            ]}\n            yAxis={[\n              {\n                position: \"none\",\n                width: 0,\n              },\n            ]}\n            margin={{\n              left: 10,\n              right: 10,\n              top: 30,\n              bottom: 40,\n            }}\n            height={350}\n            grid={{\n              horizontal: true,\n              vertical: false,\n            }}\n            sx={theme => ({\n              \"& .MuiChartsAxis-line\": {\n                stroke: \"var(--mui-palette-divider)\",\n                strokeOpacity: 0.3,\n              },\n              \"& .MuiChartsAxis-tick\": {\n                stroke: \"var(--mui-palette-divider)\",\n                strokeOpacity: 0.3,\n              },\n              \"& .MuiChartsGrid-line\": {\n                stroke: \"var(--mui-palette-divider)\",\n                strokeOpacity: 0.15,\n              },\n              \"& .MuiLineElement-root\": {\n                strokeWidth: 2,\n              },\n              ...theme.applyStyles(\"dark\", {\n                \"& .MuiChartsAxis-line\": {\n                  strokeOpacity: 0.2,\n                },\n                \"& .MuiChartsAxis-tick\": {\n                  strokeOpacity: 0.2,\n                },\n                \"& .MuiChartsGrid-line\": {\n                  strokeOpacity: 0.1,\n                },\n              }),\n            })}\n          />\n        </Box>\n      </Stack>\n    </Card>\n  );\n}",
      "type": "registry:block"
    }
  ],
  "meta": {
    "screenshot": "/screenshots/portfolio-value-chart.png"
  }
}