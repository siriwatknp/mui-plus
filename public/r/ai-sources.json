{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "ai-sources",
  "type": "registry:item",
  "title": "Ai Sources",
  "description": "A ai-sources item.",
  "dependencies": [
    "@mui/material",
    "@emotion/react",
    "@emotion/styled"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "components/ai-sources/ai-sources.demo.tsx",
      "target": "src/mui-plus/components/ai-sources/ai-sources.demo.tsx",
      "content": "\"use client\";\n\nimport { Sources, SourcesTrigger, SourcesContent, Source } from \"./ai-sources\";\nimport { BookIcon } from \"lucide-react\";\n\nexport default function AISourcesDemo() {\n  const sources = [\n    {\n      title: \"React Documentation\",\n      href: \"https://react.dev/learn\",\n    },\n    {\n      title: \"MDN Web Docs\",\n      href: \"https://developer.mozilla.org\",\n    },\n    {\n      title: \"TypeScript Handbook\",\n      href: \"https://www.typescriptlang.org/docs/\",\n    },\n    {\n      title: \"Next.js Documentation\",\n      href: \"https://nextjs.org/docs\",\n    },\n  ];\n\n  return (\n    <div className=\"w-full max-w-2xl mx-auto space-y-8 p-8\">\n      <div className=\"space-y-2\">\n        <h3 className=\"text-sm font-medium text-muted-foreground\">\n          Sources Component\n        </h3>\n        <p className=\"text-sm text-muted-foreground\">\n          Display sources used in AI responses with collapsible list.\n        </p>\n\n        <div className=\"space-y-4\">\n          <Sources>\n            <SourcesTrigger count={sources.length} />\n            <SourcesContent>\n              {sources.map((source, index) => (\n                <Source key={index} href={source.href} title={source.title}>\n                  <BookIcon className=\"h-3 w-3\" />\n                  <span className=\"text-xs underline\">{source.title}</span>\n                </Source>\n              ))}\n            </SourcesContent>\n          </Sources>\n        </div>\n      </div>\n\n      <div className=\"space-y-2\">\n        <h3 className=\"text-sm font-medium text-muted-foreground\">\n          Custom Trigger Text\n        </h3>\n\n        <Sources>\n          <SourcesTrigger count={3}>\n            <p className=\"font-medium\">View {3} references</p>\n          </SourcesTrigger>\n          <SourcesContent>\n            <Source href=\"#\" title=\"Reference 1\">\n              <BookIcon className=\"h-3 w-3\" />\n              <span className=\"text-xs underline\">Reference 1</span>\n            </Source>\n            <Source href=\"#\" title=\"Reference 2\">\n              <BookIcon className=\"h-3 w-3\" />\n              <span className=\"text-xs underline\">Reference 2</span>\n            </Source>\n            <Source href=\"#\" title=\"Reference 3\">\n              <BookIcon className=\"h-3 w-3\" />\n              <span className=\"text-xs underline\">Reference 3</span>\n            </Source>\n          </SourcesContent>\n        </Sources>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:item"
    },
    {
      "path": "components/ai-sources/ai-sources.tsx",
      "target": "src/mui-plus/components/ai-sources/ai-sources.tsx",
      "content": "\"use client\";\n\nimport Box from \"@mui/material/Box\";\nimport Collapse from \"@mui/material/Collapse\";\nimport Link from \"@mui/material/Link\";\nimport Typography from \"@mui/material/Typography\";\nimport type { SxProps, Theme } from \"@mui/material/styles\";\nimport { BookIcon, ChevronDownIcon } from \"lucide-react\";\nimport React, { useState, type ReactNode } from \"react\";\n\nexport type SourcesProps = {\n  children?: ReactNode;\n  sx?: SxProps<Theme>;\n};\n\nexport const Sources = ({ children, sx }: SourcesProps) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <Box\n      sx={{\n        mb: 2,\n        color: \"primary.main\",\n        fontSize: \"0.75rem\",\n        ...sx,\n      }}\n    >\n      {React.Children.map(children, (child) =>\n        React.isValidElement(child)\n          ? React.cloneElement(child as React.ReactElement<any>, {\n              isOpen,\n              onToggle: () => setIsOpen(!isOpen),\n            })\n          : child,\n      )}\n    </Box>\n  );\n};\n\nexport type SourcesTriggerProps = {\n  count: number;\n  children?: ReactNode;\n  sx?: SxProps<Theme>;\n  isOpen?: boolean;\n  onToggle?: () => void;\n};\n\nexport const SourcesTrigger = ({\n  count,\n  children,\n  sx,\n  isOpen = false,\n  onToggle,\n}: SourcesTriggerProps) => (\n  <Box\n    component=\"button\"\n    onClick={onToggle}\n    sx={{\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: 1,\n      border: \"none\",\n      background: \"transparent\",\n      color: \"inherit\",\n      cursor: \"pointer\",\n      p: 0,\n      ...sx,\n    }}\n  >\n    {children ?? (\n      <>\n        <Typography component=\"span\" sx={{ fontWeight: 500 }}>\n          Used {count} sources\n        </Typography>\n        <Box\n          component={ChevronDownIcon}\n          size={16}\n          sx={{\n            transition: \"transform 0.2s\",\n            transform: isOpen ? \"rotate(180deg)\" : \"rotate(0deg)\",\n          }}\n        />\n      </>\n    )}\n  </Box>\n);\n\nexport type SourcesContentProps = {\n  children?: ReactNode;\n  sx?: SxProps<Theme>;\n  isOpen?: boolean;\n};\n\nexport const SourcesContent = ({\n  children,\n  sx,\n  isOpen = false,\n}: SourcesContentProps) => (\n  <Collapse in={isOpen}>\n    <Box\n      sx={{\n        mt: 1.5,\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 1,\n        width: \"fit-content\",\n        ...sx,\n      }}\n    >\n      {children}\n    </Box>\n  </Collapse>\n);\n\nexport type SourceProps = {\n  href?: string;\n  title?: string;\n  children?: ReactNode;\n  sx?: SxProps<Theme>;\n};\n\nexport const Source = ({ href, title, children, sx }: SourceProps) => (\n  <Link\n    href={href}\n    rel=\"noreferrer\"\n    target=\"_blank\"\n    underline=\"hover\"\n    sx={{\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: 1,\n      color: \"inherit\",\n      ...sx,\n    }}\n  >\n    {children ?? (\n      <>\n        <BookIcon size={16} />\n        <Typography component=\"span\" sx={{ fontWeight: 500 }}>\n          {title}\n        </Typography>\n      </>\n    )}\n  </Link>\n);\n",
      "type": "registry:item"
    }
  ],
  "meta": {
    "screenshot": "/screenshots/ai-sources.png",
    "category": "ai"
  }
}