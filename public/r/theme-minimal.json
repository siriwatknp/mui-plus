{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "theme-minimal",
  "type": "registry:theme",
  "title": "Minimal Theme",
  "description": "A minimal theme reset for MUI.",
  "dependencies": [
    "@mui/material"
  ],
  "files": [
    {
      "path": "registry/new-york/themes/minimal/minimal-theme.tsx",
      "content": "import { createTheme } from \"@mui/material/styles\";\nimport type {} from \"@mui/material/themeCssVarsAugmentation\";\n\n// Augment the palette to include custom 'text' property\ndeclare module \"@mui/material/styles\" {\n  interface PaletteColor {\n    text?: string;\n  }\n\n  interface SimplePaletteColorOptions {\n    text?: string;\n  }\n\n  interface TypeText {\n    icon?: string;\n  }\n}\n\nconst theme = createTheme({\n  cssVariables: {\n    colorSchemeSelector: \"class\",\n    cssVarPrefix: \"minimal\",\n  },\n  colorSchemes: {\n    light: {\n      palette: {\n        text: {\n          icon: \"rgb(142, 142, 147)\", // systemGray for icons\n        },\n        action: {\n          activatedOpacity: 0.38, // Reduced from 0.54\n          selectedOpacity: 0.06, // Reduced from 0.08\n          disabledOpacity: 0.2, // Reduced from 0.38\n          focusOpacity: 0.08, // Reduced from 0.12\n        },\n        primary: {\n          main: \"#000\",\n          text: \"#212121\",\n        },\n        secondary: {\n          main: \"rgb(229, 229, 234)\", // systemGray\n          text: \"rgb(108, 108, 112)\", // systemGray increased contrast\n        },\n        success: {\n          main: \"rgb(52, 199, 89)\", // green\n          text: \"rgb(0, 137, 50)\", // green increased contrast\n        },\n        error: {\n          main: \"rgb(255, 56, 60)\", // red\n          text: \"rgb(233, 21, 45)\", // red increased contrast\n        },\n        warning: {\n          main: \"rgb(255, 204, 0)\", // yellow\n          text: \"rgb(161, 106, 0)\", // yellow increased contrast\n        },\n        info: {\n          main: \"rgb(0, 136, 255)\", // blue\n          text: \"rgb(30, 110, 244)\", // blue increased contrast\n        },\n      },\n    },\n    dark: {\n      palette: {\n        text: {\n          icon: \"rgb(174, 174, 178)\", // systemGray for icons in dark mode\n        },\n        action: {\n          activatedOpacity: 0.38, // Reduced intensity\n          selectedOpacity: 0.06, // Subtle selection\n          disabledOpacity: 0.2, // Reduced opacity\n          focusOpacity: 0.08, // Subtle focus\n        },\n        primary: {\n          main: \"#fff\",\n          text: \"#f5f5f5\",\n        },\n        secondary: {\n          main: \"rgb(142, 142, 147)\", // systemGray\n          text: \"rgb(174, 174, 178)\", // systemGray for dark mode\n        },\n        success: {\n          main: \"rgb(48, 209, 88)\", // green for dark\n          text: \"rgb(71, 217, 104)\", // green for dark\n        },\n        error: {\n          main: \"rgb(255, 69, 58)\", // red for dark\n          text: \"rgb(255, 97, 101)\", // red for dark\n        },\n        warning: {\n          main: \"rgb(255, 214, 10)\", // yellow for dark\n          text: \"rgb(254, 223, 67)\", // yellow for dark\n        },\n        info: {\n          main: \"rgb(0, 145, 255)\", // blue for dark\n          text: \"rgb(92, 184, 255)\", // blue for dark\n        },\n      },\n    },\n  },\n  shape: {\n    borderRadius: 8,\n  },\n  components: {\n    MuiButtonBase: {\n      styleOverrides: {\n        root: {\n          \"&& .MuiTouchRipple-child\": {\n            background: \"color-mix(in oklch, currentColor, transparent 60%)\",\n          },\n        },\n      },\n    },\n    MuiButton: {\n      defaultProps: {\n        disableElevation: true,\n      },\n      styleOverrides: {\n        root: ({ theme }) => ({\n          minWidth: \"unset\",\n          textTransform: \"capitalize\",\n          \"@media (hover: hover)\": {\n            \"&:disabled\": {\n              pointerEvents: \"auto\",\n              cursor: \"not-allowed\",\n            },\n          },\n          // When button contains only an icon (with or without TouchRipple)\n          \"&:has(> svg:first-of-type):not(:has(> :not(svg):not(.MuiTouchRipple-root)))\":\n            {\n              \"&.MuiButton-sizeSmall\": {\n                padding: \"4px\",\n                minWidth: \"28px\",\n              },\n              \"&.MuiButton-sizeMedium\": {\n                padding: \"8px\",\n                minWidth: \"36px\",\n              },\n              \"&.MuiButton-sizeLarge\": {\n                padding: \"12px\",\n                minWidth: \"48px\",\n              },\n              // Outlined variant needs to compensate for border\n              \"&.MuiButton-outlined\": {\n                \"&.MuiButton-sizeSmall\": {\n                  padding: \"3px\",\n                },\n                \"&.MuiButton-sizeMedium\": {\n                  padding: \"7px\",\n                },\n                \"&.MuiButton-sizeLarge\": {\n                  padding: \"11px\",\n                },\n              },\n            },\n          variants: [\n            // Size variants\n            {\n              props: { size: \"small\" },\n              style: {\n                padding: \"4px 12px\",\n                lineHeight: \"20px\",\n              },\n            },\n            {\n              props: { size: \"medium\" },\n              style: {\n                padding: \"8px 16px\",\n                lineHeight: \"20px\",\n              },\n            },\n            {\n              props: { size: \"large\" },\n              style: {\n                padding: \"12px 24px\",\n                lineHeight: \"24px\",\n              },\n            },\n            // Outlined border compensation for all sizes\n            {\n              props: { variant: \"outlined\" },\n              style: {\n                \"&.MuiButton-sizeSmall\": {\n                  padding: \"3px 12px\",\n                },\n                \"&.MuiButton-sizeMedium\": {\n                  padding: \"7px 16px\",\n                },\n                \"&.MuiButton-sizeLarge\": {\n                  padding: \"11px 24px\",\n                },\n                \"& .MuiTouchRipple-root\": {\n                  inset: \"-1px\",\n                },\n              },\n            },\n            // Text variant uses custom text colors\n            {\n              props: { variant: \"text\" },\n              style: {\n                \"&.MuiButton-colorSecondary\": {\n                  \"--variant-textColor\": (theme.vars || theme).palette.secondary\n                    .text,\n                },\n                \"&.MuiButton-colorSuccess\": {\n                  \"--variant-textColor\": (theme.vars || theme).palette.success\n                    .text,\n                },\n                \"&.MuiButton-colorError\": {\n                  \"--variant-textColor\": (theme.vars || theme).palette.error\n                    .text,\n                },\n                \"&.MuiButton-colorWarning\": {\n                  \"--variant-textColor\": (theme.vars || theme).palette.warning\n                    .text,\n                },\n                \"&.MuiButton-colorInfo\": {\n                  \"--variant-textColor\": (theme.vars || theme).palette.info\n                    .text,\n                },\n                color: \"var(--variant-textColor)\",\n              },\n            },\n            // Outlined variant uses custom text colors and subtle borders\n            {\n              props: { variant: \"outlined\" },\n              style: {\n                \"&.MuiButton-colorPrimary\": {\n                  \"--variant-outlinedBorder\": `color-mix(in srgb, ${\n                    (theme.vars || theme).palette.primary.main\n                  } 28%, transparent)`,\n                },\n                \"&.MuiButton-colorSecondary\": {\n                  \"--variant-outlinedColor\": (theme.vars || theme).palette\n                    .secondary.text,\n                  \"--variant-outlinedBorder\": `color-mix(in srgb, ${\n                    (theme.vars || theme).palette.secondary.text\n                  } 28%, transparent)`,\n                },\n                \"&.MuiButton-colorSuccess\": {\n                  \"--variant-outlinedColor\": (theme.vars || theme).palette\n                    .success.text,\n                  \"--variant-outlinedBorder\": `color-mix(in srgb, ${\n                    (theme.vars || theme).palette.success.text\n                  } 28%, transparent)`,\n                },\n                \"&.MuiButton-colorError\": {\n                  \"--variant-outlinedColor\": (theme.vars || theme).palette.error\n                    .text,\n                  \"--variant-outlinedBorder\": `color-mix(in srgb, ${\n                    (theme.vars || theme).palette.error.text\n                  } 28%, transparent)`,\n                },\n                \"&.MuiButton-colorWarning\": {\n                  \"--variant-outlinedColor\": (theme.vars || theme).palette\n                    .warning.text,\n                  \"--variant-outlinedBorder\": `color-mix(in srgb, ${\n                    (theme.vars || theme).palette.warning.text\n                  } 28%, transparent)`,\n                },\n                \"&.MuiButton-colorInfo\": {\n                  \"--variant-outlinedColor\": (theme.vars || theme).palette.info\n                    .text,\n                  \"--variant-outlinedBorder\": `color-mix(in srgb, ${\n                    (theme.vars || theme).palette.info.text\n                  } 28%, transparent)`,\n                },\n                color: \"var(--variant-outlinedColor)\",\n                borderColor: \"var(--variant-outlinedBorder)\",\n              },\n            },\n            // Contained variant for success, error, warning, info\n            {\n              props: { variant: \"contained\", color: \"success\" },\n              style: {\n                color: `color-mix(in oklch, ${\n                  (theme.vars || theme).palette.success.text\n                }, ${(theme.vars || theme).palette.common.onBackground} 30%)`,\n                backgroundColor: `color-mix(in oklch, ${\n                  (theme.vars || theme).palette.success.main\n                }, ${(theme.vars || theme).palette.common.background} 60%)`,\n              },\n            },\n            {\n              props: { variant: \"contained\", color: \"error\" },\n              style: {\n                color: `color-mix(in oklch, ${\n                  (theme.vars || theme).palette.error.text\n                }, ${(theme.vars || theme).palette.common.onBackground} 30%)`,\n                backgroundColor: `color-mix(in oklch, ${\n                  (theme.vars || theme).palette.error.main\n                }, ${(theme.vars || theme).palette.common.background} 60%)`,\n              },\n            },\n            {\n              props: { variant: \"contained\", color: \"warning\" },\n              style: {\n                color: `color-mix(in oklch, ${\n                  (theme.vars || theme).palette.warning.text\n                }, ${(theme.vars || theme).palette.common.onBackground} 30%)`,\n                backgroundColor: `color-mix(in oklch, ${\n                  (theme.vars || theme).palette.warning.main\n                }, ${(theme.vars || theme).palette.common.background} 60%)`,\n              },\n            },\n            {\n              props: { variant: \"contained\", color: \"info\" },\n              style: {\n                color: `color-mix(in oklch, ${\n                  (theme.vars || theme).palette.info.text\n                }, ${(theme.vars || theme).palette.common.onBackground} 30%)`,\n                backgroundColor: `color-mix(in oklch, ${\n                  (theme.vars || theme).palette.info.main\n                }, ${(theme.vars || theme).palette.common.background} 60%)`,\n              },\n            },\n          ],\n        }),\n      },\n    },\n    MuiFormControl: {\n      defaultProps: {\n        variant: \"outlined\",\n      },\n      styleOverrides: {\n        root: ({ theme }) => ({\n          variants: [\n            {\n              props: { variant: \"outlined\" },\n              style: {\n                \"& .MuiFormLabel-root, & .MuiInputLabel-root.MuiInputLabel-shrink\":\n                  {\n                    position: \"static\",\n                    transform: \"none\",\n                    pointerEvents: \"auto\",\n                    marginBottom: \"0.25rem\",\n                    maxWidth: \"unset\",\n                    fontWeight: 500,\n                    color: (theme.vars || theme).palette.text.primary,\n                  },\n                \"& .MuiOutlinedInput-input:where(input)\": {\n                  paddingBlock: \"9.5px\",\n                },\n                \"&&& .MuiInputBase-input\": {\n                  \"&::-webkit-input-placeholder\": {\n                    opacity: \"0.42 !important\",\n                  },\n                  \"&::-moz-placeholder\": {\n                    opacity: \"0.42 !important\",\n                  },\n                  \"&::-ms-input-placeholder\": {\n                    opacity: \"0.42 !important\",\n                  },\n                },\n                \"&& .MuiOutlinedInput-notchedOutline\": {\n                  transition: \"none\",\n                  \"& legend\": {\n                    width: 0,\n                  },\n                },\n              },\n            },\n            {\n              props: { variant: \"outlined\", size: \"small\" },\n              style: {\n                \"& .MuiInputBase-input:where(input)\": {\n                  paddingBlock: \"6.5px\",\n                  paddingInline: \"12px\",\n                },\n              },\n            },\n          ],\n        }),\n      },\n    },\n    MuiInputBase: {\n      styleOverrides: {\n        root: ({ theme }) => ({\n          fontSize: theme.typography.body2.fontSize,\n          variants: [\n            {\n              props: { size: \"small\" },\n              style: {\n                fontSize: theme.typography.body2.fontSize,\n              },\n            },\n          ],\n        }),\n        input: () => ({\n          padding: \"8px 12px\",\n          minHeight: \"1.5em\",\n          variants: [\n            {\n              props: { size: \"small\" },\n              style: {\n                padding: \"4px 10px\",\n              },\n            },\n            {\n              props: { multiline: true },\n              style: {\n                padding: 0,\n              },\n            },\n          ],\n        }),\n      },\n    },\n    MuiOutlinedInput: {\n      styleOverrides: {\n        root: ({ theme }) => ({\n          \"& .MuiOutlinedInput-notchedOutline\": {\n            transition: theme.transitions.create([\"border-color\"], {\n              duration: theme.transitions.duration.shorter,\n            }),\n          },\n          \"&:hover .MuiOutlinedInput-notchedOutline\": {\n            borderColor: (theme.vars || theme).palette.text.primary,\n          },\n          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n            borderWidth: 2,\n            borderColor: (theme.vars || theme).palette.primary.main,\n          },\n          \"&.Mui-error .MuiOutlinedInput-notchedOutline\": {\n            borderColor: (theme.vars || theme).palette.error.main,\n          },\n          \"&.Mui-disabled\": {\n            \"& .MuiOutlinedInput-notchedOutline\": {\n              borderColor: (theme.vars || theme).palette.action.disabled,\n            },\n          },\n          variants: [\n            {\n              props: { multiline: true },\n              style: {\n                padding: \"8px 12px\",\n              },\n            },\n            {\n              props: { size: \"small\", multiline: true },\n              style: {\n                padding: \"4px 10px\",\n              },\n            },\n          ],\n        }),\n        notchedOutline: {\n          borderRadius: 8,\n        },\n      },\n    },\n    MuiFilledInput: {\n      styleOverrides: {\n        root: ({ theme }) => ({\n          backgroundColor: (theme.vars || theme).palette.action.hover,\n          borderRadius: \"8px 8px 0 0\",\n          \"&:hover\": {\n            backgroundColor: (theme.vars || theme).palette.action.selected,\n          },\n          \"&.Mui-focused\": {\n            backgroundColor: (theme.vars || theme).palette.action.selected,\n          },\n          \"&.Mui-disabled\": {\n            backgroundColor: (theme.vars || theme).palette.action\n              .disabledBackground,\n          },\n          \"&::before\": {\n            transition: theme.transitions.create([\"border-bottom-color\"], {\n              duration: theme.transitions.duration.shorter,\n            }),\n          },\n          \"&:hover::before\": {\n            borderBottom: `2px solid ${\n              (theme.vars || theme).palette.text.primary\n            }`,\n          },\n          \"&::after\": {\n            borderBottom: `2px solid ${\n              (theme.vars || theme).palette.primary.main\n            }`,\n          },\n          \"&.Mui-error::after\": {\n            borderBottomColor: (theme.vars || theme).palette.error.main,\n          },\n        }),\n        input: () => ({\n          \"&:where(input)\": {\n            padding: \"25px 12px 8px\",\n          },\n          variants: [\n            {\n              props: { size: \"small\" },\n              style: {\n                \"&:where(input)\": {\n                  padding: \"21px 10px 4px\",\n                },\n              },\n            },\n          ],\n        }),\n      },\n    },\n    MuiInput: {\n      styleOverrides: {\n        root: ({ theme }) => ({\n          \"&::before\": {\n            transition: theme.transitions.create([\"border-bottom-color\"], {\n              duration: theme.transitions.duration.shorter,\n            }),\n          },\n          \"&:hover:not(.Mui-disabled)::before\": {\n            borderBottom: `2px solid ${\n              (theme.vars || theme).palette.text.primary\n            }`,\n          },\n          \"&::after\": {\n            borderBottom: `2px solid ${\n              (theme.vars || theme).palette.primary.main\n            }`,\n          },\n          \"&.Mui-error::after\": {\n            borderBottomColor: (theme.vars || theme).palette.error.main,\n          },\n        }),\n        input: {\n          padding: \"4px 0 5px\",\n        },\n      },\n    },\n    MuiInputLabel: {\n      styleOverrides: {\n        root: ({ theme }) => ({\n          fontSize: theme.typography.body2.fontSize,\n          \"&.Mui-focused\": {\n            color: (theme.vars || theme).palette.primary.main,\n          },\n          \"&.Mui-error\": {\n            color: (theme.vars || theme).palette.error.main,\n          },\n        }),\n        outlined: {\n          \"&.MuiInputLabel-shrink\": {\n            transform: \"translate(14px, -9px) scale(0.75)\",\n          },\n          variants: [\n            {\n              props: { size: \"small\" },\n              style: {\n                transform: \"translate(14px, 7px) scale(1)\",\n                \"&.MuiInputLabel-shrink\": {\n                  transform: \"translate(14px, -9px) scale(0.75)\",\n                },\n              },\n            },\n          ],\n        },\n        filled: {\n          transform: \"translate(12px, 16px) scale(1)\",\n          \"&.MuiInputLabel-shrink\": {\n            transform: \"translate(12px, 7px) scale(0.75)\",\n          },\n          variants: [\n            {\n              props: { size: \"small\" },\n              style: {\n                transform: \"translate(12px, 13px) scale(1)\",\n                \"&.MuiInputLabel-shrink\": {\n                  transform: \"translate(12px, 4px) scale(0.75)\",\n                },\n              },\n            },\n          ],\n        },\n      },\n    },\n    MuiFormHelperText: {\n      styleOverrides: {\n        root: ({ theme }) => ({\n          marginTop: 4,\n          fontSize: theme.typography.caption.fontSize,\n          \"&.Mui-error\": {\n            color: (theme.vars || theme).palette.error.text,\n          },\n        }),\n      },\n    },\n    MuiInputAdornment: {\n      styleOverrides: {\n        root: ({ theme }) => ({\n          color: (theme.vars || theme).palette.text.secondary,\n          variants: [\n            {\n              props: { position: \"start\" },\n              style: {\n                marginRight: 8,\n              },\n            },\n            {\n              props: { position: \"end\" },\n              style: {\n                marginLeft: 8,\n              },\n            },\n          ],\n        }),\n      },\n    },\n    MuiSelect: {\n      defaultProps: {\n        variant: \"outlined\",\n      },\n      styleOverrides: {\n        select: {\n          \"&.MuiInputBase-input\": {\n            paddingRight: 32,\n          },\n          \"&.MuiOutlinedInput-input\": {\n            padding: \"8px 14px\",\n          },\n          \"&.MuiFilledInput-input\": {\n            padding: \"25px 12px 8px\",\n          },\n          variants: [\n            {\n              props: { size: \"small\" },\n              style: {\n                \"&.MuiOutlinedInput-input\": {\n                  padding: \"4px 14px\",\n                },\n                \"&.MuiFilledInput-input\": {\n                  padding: \"21px 10px 4px\",\n                },\n              },\n            },\n          ],\n        },\n        icon: ({ theme }) => ({\n          color: (theme.vars || theme).palette.text.secondary,\n          right: 8,\n          transition: theme.transitions.create([\"transform\"], {\n            duration: theme.transitions.duration.shorter,\n          }),\n        }),\n        iconOpen: {\n          transform: \"rotate(180deg)\",\n        },\n      },\n    },\n    MuiMenu: {\n      defaultProps: {\n        PaperProps: {\n          elevation: 0,\n          variant: \"outlined\",\n        },\n      },\n      styleOverrides: {\n        paper: ({ theme }) => ({\n          marginTop: 4,\n          borderRadius: 8,\n          border: `1px solid ${(theme.vars || theme).palette.divider}`,\n        }),\n        list: {\n          padding: \"6px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: \"4px\",\n        },\n      },\n    },\n    MuiMenuItem: {\n      styleOverrides: {\n        root: ({ theme }) => ({\n          fontSize: theme.typography.body2.fontSize,\n          padding: \"6px\",\n          borderRadius: 4,\n          margin: 0,\n          transition: theme.transitions.create([\"background-color\"], {\n            duration: theme.transitions.duration.shortest,\n          }),\n          \"&:hover\": {\n            backgroundColor: (theme.vars || theme).palette.action.hover,\n          },\n          \"&.Mui-selected\": {\n            backgroundColor: (theme.vars || theme).palette.action.selected,\n            \"&:hover\": {\n              backgroundColor: (theme.vars || theme).palette.action.selected,\n            },\n          },\n          \"&.Mui-focusVisible\": {\n            backgroundColor: (theme.vars || theme).palette.action.focus,\n          },\n          variants: [\n            {\n              props: { dense: true },\n              style: {\n                padding: \"4px 8px\",\n              },\n            },\n          ],\n        }),\n      },\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        slotProps: {\n          paper: {\n            elevation: 8,\n          },\n        },\n      },\n      styleOverrides: {\n        root: {\n          \"& .MuiAutocomplete-inputRoot\": {\n            paddingTop: 6,\n            paddingBottom: 6,\n            paddingRight: 40,\n            \"&:has(.MuiChip-root)\": {\n              paddingLeft: \"6px\",\n            },\n            \"& .MuiAutocomplete-input\": {\n              paddingBlock: 7.5,\n            },\n          },\n          \"& .MuiAutocomplete-inputRoot.MuiInputBase-sizeSmall\": {\n            paddingTop: 4,\n            paddingBottom: 4,\n            \"&:has(.MuiChip-root)\": {\n              paddingLeft: 4,\n            },\n            \"& .MuiAutocomplete-input\": {\n              paddingBlock: 4.5,\n            },\n          },\n        },\n        tag: {\n          margin: 2,\n        },\n        option: ({ theme }) => ({\n          fontSize: theme.typography.body2.fontSize,\n          padding: \"6px\",\n          borderRadius: 4,\n        }),\n        paper: ({ theme }) => ({\n          marginTop: 4,\n          borderRadius: 8,\n          border: `1px solid ${(theme.vars || theme).palette.divider}`,\n        }),\n        listbox: {\n          padding: \"6px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: \"4px\",\n        },\n        noOptions: ({ theme }) => ({\n          fontSize: theme.typography.body2.fontSize,\n          color: (theme.vars || theme).palette.text.secondary,\n        }),\n        loading: ({ theme }) => ({\n          fontSize: theme.typography.body2.fontSize,\n          color: (theme.vars || theme).palette.text.secondary,\n        }),\n        clearIndicator: {\n          borderRadius: 4,\n        },\n        popupIndicator: {\n          borderRadius: 4,\n          variants: [\n            {\n              props: { size: \"small\" },\n              style: {\n                marginRight: -5,\n              },\n            },\n          ],\n        },\n      },\n    },\n    MuiChip: {\n      styleOverrides: {\n        root: ({ theme }) => ({\n          borderRadius: 6,\n          fontWeight: 400,\n          fontSize: theme.typography.body2.fontSize,\n          variants: [\n            {\n              props: { variant: \"outlined\", color: \"primary\" },\n              style: {\n                color: (theme.vars || theme).palette.primary.text,\n              },\n            },\n            {\n              props: { variant: \"outlined\", color: \"secondary\" },\n              style: {\n                color: (theme.vars || theme).palette.secondary.text,\n              },\n            },\n            {\n              props: { variant: \"outlined\", color: \"success\" },\n              style: {\n                color: (theme.vars || theme).palette.success.text,\n              },\n            },\n            {\n              props: { variant: \"outlined\", color: \"error\" },\n              style: {\n                color: (theme.vars || theme).palette.error.text,\n              },\n            },\n            {\n              props: { variant: \"outlined\", color: \"warning\" },\n              style: {\n                color: (theme.vars || theme).palette.warning.text,\n              },\n            },\n            {\n              props: { variant: \"outlined\", color: \"info\" },\n              style: {\n                color: (theme.vars || theme).palette.info.text,\n              },\n            },\n            // Filled variant for success, error, warning, info\n            {\n              props: { variant: \"filled\" },\n              style: {\n                ...theme.applyStyles(\"dark\", {\n                  \"--_p\": \"60%\",\n                }),\n              },\n            },\n            {\n              props: { variant: \"filled\", color: \"success\" },\n              style: {\n                color: `color-mix(in oklch, ${\n                  (theme.vars || theme).palette.success.text\n                }, ${(theme.vars || theme).palette.common.onBackground} 30%)`,\n                backgroundColor: `color-mix(in oklch, ${\n                  (theme.vars || theme).palette.success.main\n                }, ${\n                  (theme.vars || theme).palette.common.background\n                } var(--_p, 80%))`,\n              },\n            },\n            {\n              props: { variant: \"filled\", color: \"error\" },\n              style: {\n                color: `color-mix(in oklch, ${\n                  (theme.vars || theme).palette.error.text\n                }, ${(theme.vars || theme).palette.common.onBackground} 30%)`,\n                backgroundColor: `color-mix(in oklch, ${\n                  (theme.vars || theme).palette.error.main\n                }, ${\n                  (theme.vars || theme).palette.common.background\n                } var(--_p, 80%))`,\n              },\n            },\n            {\n              props: { variant: \"filled\", color: \"warning\" },\n              style: {\n                color: `color-mix(in oklch, ${\n                  (theme.vars || theme).palette.warning.text\n                }, ${(theme.vars || theme).palette.common.onBackground} 30%)`,\n                backgroundColor: `color-mix(in oklch, ${\n                  (theme.vars || theme).palette.warning.main\n                }, ${\n                  (theme.vars || theme).palette.common.background\n                } var(--_p, 80%))`,\n              },\n            },\n            {\n              props: { variant: \"filled\", color: \"info\" },\n              style: {\n                color: `color-mix(in oklch, ${\n                  (theme.vars || theme).palette.info.text\n                }, ${(theme.vars || theme).palette.common.onBackground} 30%)`,\n                backgroundColor: `color-mix(in oklch, ${\n                  (theme.vars || theme).palette.info.main\n                }, ${\n                  (theme.vars || theme).palette.common.background\n                } var(--_p, 80%))`,\n              },\n            },\n          ],\n        }),\n        icon: {\n          fontSize: \"1.125rem\",\n          variants: [\n            {\n              props: { size: \"small\" },\n              style: {\n                fontSize: \"1rem\",\n              },\n            },\n          ],\n        },\n        deleteIcon: ({ theme }) => ({\n          variants: [\n            {\n              props: { color: \"default\" },\n              style: {\n                color: (theme.vars || theme).palette.text.icon,\n                \"&:hover\": {\n                  color: (theme.vars || theme).palette.text.secondary,\n                },\n              },\n            },\n          ],\n        }),\n      },\n    },\n    MuiAvatar: {\n      styleOverrides: {\n        root: ({ theme }) => ({\n          fontWeight: 500,\n          fontSize: theme.typography.body2.fontSize,\n          backgroundColor: (theme.vars || theme).palette.secondary.light,\n          color: (theme.vars || theme).palette.text.secondary,\n          ...theme.applyStyles(\"dark\", {\n            backgroundColor: (theme.vars || theme).palette.secondary.dark,\n          }),\n        }),\n      },\n    },\n    MuiTable: {\n      styleOverrides: {\n        root: {\n          tableLayout: \"fixed\",\n        },\n      },\n    },\n    MuiTableCell: {\n      styleOverrides: {\n        root: ({ theme }) => ({\n          borderBottomColor: (theme.vars || theme).palette.divider,\n          fontSize: theme.typography.body2.fontSize,\n          padding: \"14px 24px 14px 12px\",\n        }),\n        head: ({ theme }) => ({\n          fontWeight: 600,\n          color: (theme.vars || theme).palette.text.primary,\n          backgroundColor: `color-mix(in srgb, ${\n            (theme.vars || theme).palette.secondary.main\n          }, ${(theme.vars || theme).palette.common.background} 60%)`,\n        }),\n        sizeSmall: {\n          padding: \"6px 16px 6px 12px\",\n        },\n      },\n    },\n    MuiTableRow: {\n      styleOverrides: {\n        root: ({ theme }) => ({\n          \"tbody > &:last-child td, tbody > &:last-child th\": {\n            borderBottom: 0,\n          },\n          \"&.MuiTableRow-hover:hover\": {\n            backgroundColor: (theme.vars || theme).palette.action.hover,\n          },\n          \"&.Mui-selected\": {\n            backgroundColor: (theme.vars || theme).palette.action.selected,\n            \"&:hover\": {\n              backgroundColor: (theme.vars || theme).palette.action.selected,\n            },\n          },\n        }),\n      },\n    },\n    MuiTableContainer: {\n      styleOverrides: {\n        root: ({ theme }) => ({\n          borderRadius: theme.shape.borderRadius,\n          border: `1px solid ${(theme.vars || theme).palette.divider}`,\n        }),\n      },\n    },\n    MuiTablePagination: {\n      styleOverrides: {\n        root: ({ theme }) => ({\n          borderTop: `1px solid ${(theme.vars || theme).palette.divider}`,\n        }),\n        select: ({ theme }) => ({\n          fontSize: theme.typography.body2.fontSize,\n        }),\n        selectLabel: ({ theme }) => ({\n          fontSize: theme.typography.body2.fontSize,\n        }),\n        displayedRows: ({ theme }) => ({\n          fontSize: theme.typography.body2.fontSize,\n        }),\n      },\n    },\n    MuiTableSortLabel: {\n      styleOverrides: {\n        root: ({ theme }) => ({\n          fontWeight: 600,\n          \"&:hover\": {\n            color: (theme.vars || theme).palette.text.primary,\n          },\n          \"&.Mui-active\": {\n            color: (theme.vars || theme).palette.text.primary,\n          },\n        }),\n        icon: ({ theme }) => ({\n          fontSize: \"1.125rem\",\n          color: (theme.vars || theme).palette.text.secondary,\n        }),\n      },\n    },\n    MuiCard: {\n      defaultProps: {\n        variant: \"outlined\",\n      },\n      styleOverrides: {\n        root: ({ theme }) => ({\n          transition: theme.transitions.create([\"box-shadow\", \"border-color\"], {\n            duration: theme.transitions.duration.short,\n          }),\n          \"&:hover\": {\n            boxShadow: theme.shadows[4],\n          },\n        }),\n      },\n    },\n    MuiCardHeader: {\n      styleOverrides: {\n        root: {\n          padding: 16,\n        },\n        title: ({ theme }) => ({\n          ...theme.typography.subtitle1,\n          fontWeight: 500,\n        }),\n        subheader: ({ theme }) => ({\n          ...theme.typography.body2,\n        }),\n        action: {\n          marginTop: 0,\n          marginRight: 0,\n        },\n      },\n    },\n    MuiCardContent: {\n      styleOverrides: {\n        root: {\n          padding: 16,\n          \"&:last-child\": {\n            paddingBottom: 16,\n          },\n        },\n      },\n    },\n    MuiCardActions: {\n      defaultProps: {\n        disableSpacing: true,\n      },\n      styleOverrides: {\n        root: {\n          padding: 16,\n          gap: 8,\n        },\n      },\n    },\n    MuiDialog: {\n      styleOverrides: {\n        root: ({ theme }) => ({\n          \"--_spacing-row\": \"16px\",\n          \"--_spacing-col\": \"20px\",\n          \"--_edge\": \"16px\",\n          [theme.breakpoints.up(\"md\")]: {\n            \"--_spacing-row\": \"20px\",\n            \"--_spacing-col\": \"24px\",\n          },\n        }),\n        paper: ({ theme }) => ({\n          \"&:not(.MuiDialog-paperFullScreen)\": {\n            borderRadius: theme.shape.borderRadius,\n            boxShadow: theme.shadows[8],\n            width: \"calc(100% - var(--_edge))\",\n            margin: \"var(--_edge)\",\n          },\n        }),\n      },\n    },\n    MuiDialogTitle: {\n      styleOverrides: {\n        root: {\n          padding: \"var(--_spacing-row) var(--_spacing-col)\",\n          fontSize: \"1.25rem\",\n          fontWeight: 500,\n        },\n      },\n    },\n    MuiDialogContent: {\n      styleOverrides: {\n        root: {\n          padding: \"0 var(--_spacing-col) var(--_spacing-row)\",\n        },\n        dividers: {\n          padding: \"var(--_spacing-row) var(--_spacing-col)\",\n          borderTop: \"1px solid\",\n          borderBottom: \"1px solid\",\n          borderColor: \"divider\",\n        },\n      },\n    },\n    MuiDialogActions: {\n      styleOverrides: {\n        root: {\n          padding: \"0px var(--_spacing-col) var(--_spacing-row)\",\n          gap: 8,\n        },\n      },\n    },\n    MuiDialogContentText: {\n      styleOverrides: {\n        root: ({ theme }) => ({\n          color: theme.vars.palette.text.secondary,\n          marginBottom: 0,\n        }),\n      },\n    },\n  },\n  typography: {\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n    ].join(\",\"),\n    body2: {\n      lineHeight: \"1.4285714286\",\n    },\n  },\n  shadows: [\n    \"none\",\n    \"0 1px 2px 0 rgb(0 0 0 / 0.05)\",\n    \"0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)\",\n    \"0 2px 4px 0 rgb(0 0 0 / 0.06)\",\n    \"0 2px 4px -1px rgb(0 0 0 / 0.06), 0 1px 2px -1px rgb(0 0 0 / 0.04)\",\n    \"0 3px 5px -1px rgb(0 0 0 / 0.07), 0 1px 3px -1px rgb(0 0 0 / 0.05)\",\n    \"0 4px 6px -1px rgb(0 0 0 / 0.07), 0 2px 4px -1px rgb(0 0 0 / 0.05)\",\n    \"0 5px 8px -2px rgb(0 0 0 / 0.08), 0 2px 4px -1px rgb(0 0 0 / 0.05)\",\n    \"0 6px 10px -2px rgb(0 0 0 / 0.08), 0 3px 5px -2px rgb(0 0 0 / 0.06)\",\n    \"0 8px 12px -3px rgb(0 0 0 / 0.09), 0 3px 6px -2px rgb(0 0 0 / 0.06)\",\n    \"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 7px -3px rgb(0 0 0 / 0.07)\",\n    \"0 12px 18px -4px rgb(0 0 0 / 0.11), 0 5px 9px -3px rgb(0 0 0 / 0.08)\",\n    \"0 15px 22px -4px rgb(0 0 0 / 0.12), 0 6px 11px -4px rgb(0 0 0 / 0.09)\",\n    \"0 18px 28px -5px rgb(0 0 0 / 0.13), 0 7px 13px -4px rgb(0 0 0 / 0.1)\",\n    \"0 22px 34px -6px rgb(0 0 0 / 0.14), 0 8px 16px -5px rgb(0 0 0 / 0.11)\",\n    \"0 26px 40px -7px rgb(0 0 0 / 0.15), 0 10px 19px -5px rgb(0 0 0 / 0.12)\",\n    \"0 31px 47px -8px rgb(0 0 0 / 0.16), 0 12px 23px -6px rgb(0 0 0 / 0.13)\",\n    \"0 36px 54px -9px rgb(0 0 0 / 0.17), 0 14px 27px -7px rgb(0 0 0 / 0.14)\",\n    \"0 42px 62px -10px rgb(0 0 0 / 0.18), 0 16px 31px -8px rgb(0 0 0 / 0.15)\",\n    \"0 48px 70px -11px rgb(0 0 0 / 0.2), 0 18px 36px -9px rgb(0 0 0 / 0.16)\",\n    \"0 54px 78px -12px rgb(0 0 0 / 0.21), 0 20px 41px -10px rgb(0 0 0 / 0.17)\",\n    \"0 60px 86px -13px rgb(0 0 0 / 0.22), 0 23px 46px -11px rgb(0 0 0 / 0.18)\",\n    \"0 66px 94px -14px rgb(0 0 0 / 0.23), 0 26px 52px -12px rgb(0 0 0 / 0.19)\",\n    \"0 72px 102px -15px rgb(0 0 0 / 0.24), 0 29px 58px -13px rgb(0 0 0 / 0.2)\",\n    \"0 58px 82px -11px rgb(0 0 0 / 0.26), 0 21px 40px -11px rgb(0 0 0 / 0.22)\",\n  ],\n});\n\nexport default theme;\n",
      "type": "registry:theme"
    }
  ],
  "meta": {
    "author": "auto-generated",
    "screenshot": "/screenshots/theme-minimal.png",
    "docs": "A minimal theme reset for MUI."
  }
}