{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "grid-card",
  "type": "registry:component",
  "title": "Grid Card",
  "description": "A component for organizing cards using CSS grid with an idealWidth prop.",
  "dependencies": [
    "@mui/material"
  ],
  "files": [
    {
      "path": "registry/new-york/components/grid-card/grid-card.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport Box from \"@mui/material/Box\";\n\nexport interface GridCardProps extends React.ComponentProps<typeof Box> {\n  /**\n   * The ideal width for each card. Can be a number (px) or any valid CSS width string.\n   * Example: 320, '320px', '20rem', '25%'\n   */\n  idealWidth?: number | string;\n}\n\nexport function GridCard({\n  idealWidth = 320,\n  children,\n  sx,\n  ...props\n}: GridCardProps) {\n  // Convert number to px string\n  const minWidth =\n    typeof idealWidth === \"number\" ? `${idealWidth}px` : idealWidth;\n  return (\n    <Box\n      sx={[\n        {\n          display: \"grid\",\n          gridTemplateColumns: `repeat(auto-fit, minmax(min(100%, ${minWidth}), 1fr))`,\n          gap: {\n            xs: 2,\n            md: 4,\n            xl: 6,\n          },\n        },\n        ...(Array.isArray(sx) ? sx : [sx]),\n      ]}\n      {...props}\n    >\n      {children}\n    </Box>\n  );\n}\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "author": "auto-generated",
    "screenshot": "/screenshots/grid-card.png",
    "docs": "A flexible grid container for cards. Accepts an 'idealWidth' prop to control the minimum width of each card."
  }
}