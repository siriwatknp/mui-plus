{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "payment-form2",
  "type": "registry:component",
  "title": "Payment Form 2",
  "description": "A comprehensive payment form with credit card, PayPal, and Amazon payment options",
  "dependencies": [
    "@mui/material",
    "@mui/icons-material",
    "@emotion/react",
    "@emotion/styled"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/components/payment-form2/payment-form2.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport {\n  Box,\n  Container,\n  TextField,\n  Typography,\n  MenuItem,\n  Stack,\n  InputAdornment,\n  ToggleButtonGroup,\n  ToggleButton,\n} from \"@mui/material\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nimport CreditCardIcon from \"@mui/icons-material/CreditCard\";\nimport LocationOnIcon from \"@mui/icons-material/LocationOn\";\n\nexport function PaymentForm2() {\n  const [selectedPayment, setSelectedPayment] = React.useState(\"credit-card\");\n  const [formData, setFormData] = React.useState({\n    fullName: \"\",\n    billingAddress: \"\",\n    city: \"\",\n    zipCode: \"\",\n    country: \"Sweden\",\n    cardholderName: \"\",\n    cardNumber: \"\",\n    expMonth: \"12\",\n    expYear: \"18\",\n    cvc: \"\",\n  });\n  const [errors, setErrors] = React.useState<Record<string, string>>({});\n\n  const handleInputChange =\n    (field: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\n      setFormData((prev) => ({ ...prev, [field]: event.target.value }));\n      // Clear error when user starts typing\n      if (errors[field]) {\n        setErrors((prev) => ({ ...prev, [field]: \"\" }));\n      }\n    };\n\n  return (\n    <Container sx={{ py: 4 }}>\n      <Typography variant=\"h3\" component=\"h1\" sx={{ mb: 2, fontWeight: 600 }}>\n        Payment\n      </Typography>\n\n      <Typography\n        variant=\"h6\"\n        sx={{ mb: 3, color: \"text.secondary\", fontWeight: 400 }}\n      >\n        Choose payment method below\n      </Typography>\n\n      <ToggleButtonGroup\n        value={selectedPayment}\n        exclusive\n        onChange={(_, newPayment) => {\n          if (newPayment !== null) {\n            setSelectedPayment(newPayment);\n          }\n        }}\n        aria-label=\"payment method\"\n        sx={{\n          display: \"flex\",\n          flexDirection: { xs: \"column\", md: \"row\" },\n          gap: 2,\n          mb: 4,\n          width: \"100%\",\n          \"& .MuiToggleButtonGroup-grouped\": {\n            margin: 0,\n            border: 1,\n            borderColor: \"divider\",\n            \"&:first-of-type\": {\n              borderRadius: 1,\n            },\n            \"&:last-of-type\": {\n              borderRadius: 1,\n            },\n          },\n          \"& .MuiToggleButton-root\": {\n            position: \"relative\",\n            p: 3,\n            flex: 1,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            textTransform: \"none\",\n            bgcolor: \"background.paper\",\n            borderRadius: 1,\n            borderWidth: 2,\n            \"&.Mui-selected\": {\n              borderColor: \"primary.main\",\n              bgcolor: \"background.paper\",\n              \"&:hover\": {\n                bgcolor: \"background.paper\",\n              },\n            },\n            \"&:hover\": {\n              borderColor: \"primary.main\",\n              bgcolor: \"background.paper\",\n            },\n          },\n        }}\n      >\n        <ToggleButton value=\"credit-card\" aria-label=\"pay with credit card\">\n          {selectedPayment === \"credit-card\" && (\n            <Box\n              sx={{\n                position: \"absolute\",\n                top: -12,\n                right: -12,\n                bgcolor: \"background.paper\",\n                borderRadius: \"50%\",\n              }}\n            >\n              <CheckCircleIcon sx={{ color: \"primary.main\", fontSize: 32 }} />\n            </Box>\n          )}\n          <CreditCardIcon sx={{ fontSize: 40, color: \"primary.main\", mb: 1 }} />\n          <Typography\n            variant=\"body2\"\n            sx={{ fontWeight: 500, textAlign: \"center\", color: \"text.primary\" }}\n          >\n            Pay with Credit Card\n          </Typography>\n        </ToggleButton>\n\n        <ToggleButton value=\"paypal\" aria-label=\"pay with PayPal\">\n          {selectedPayment === \"paypal\" && (\n            <Box\n              sx={{\n                position: \"absolute\",\n                top: -12,\n                right: -12,\n                bgcolor: \"background.paper\",\n                borderRadius: \"50%\",\n              }}\n            >\n              <CheckCircleIcon sx={{ color: \"primary.main\", fontSize: 32 }} />\n            </Box>\n          )}\n          <Box\n            component=\"img\"\n            src=\"https://upload.wikimedia.org/wikipedia/commons/b/b5/PayPal.svg\"\n            alt=\"\"\n            sx={{ height: 32, mb: 1 }}\n          />\n          <Typography\n            variant=\"body2\"\n            sx={{ fontWeight: 500, textAlign: \"center\", color: \"text.primary\" }}\n          >\n            Pay with PayPal\n          </Typography>\n        </ToggleButton>\n\n        <ToggleButton value=\"amazon\" aria-label=\"pay with Amazon Payments\">\n          {selectedPayment === \"amazon\" && (\n            <Box\n              sx={{\n                position: \"absolute\",\n                top: -12,\n                right: -12,\n                bgcolor: \"background.paper\",\n                borderRadius: \"50%\",\n              }}\n            >\n              <CheckCircleIcon sx={{ color: \"primary.main\", fontSize: 32 }} />\n            </Box>\n          )}\n          <Box\n            component=\"img\"\n            src=\"https://upload.wikimedia.org/wikipedia/commons/a/a9/Amazon_logo.svg\"\n            alt=\"\"\n            sx={{ height: 32, mb: 1 }}\n          />\n          <Typography\n            variant=\"body2\"\n            sx={{ fontWeight: 500, textAlign: \"center\", color: \"text.primary\" }}\n          >\n            Pay with Amazon Payments\n          </Typography>\n        </ToggleButton>\n      </ToggleButtonGroup>\n\n      <Stack direction={{ xs: \"column\", lg: \"row\" }} spacing={4}>\n        <Box sx={{ flex: 1 }}>\n          <Stack direction=\"row\" spacing={1} alignItems=\"center\" sx={{ mb: 3 }}>\n            <Box\n              sx={{\n                width: 32,\n                height: 32,\n                borderRadius: \"50%\",\n                border: 2,\n                borderColor: \"primary.main\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                color: \"primary.main\",\n                fontWeight: 600,\n              }}\n            >\n              1\n            </Box>\n            <Typography variant=\"h6\" sx={{ fontWeight: 500 }}>\n              Billing Info\n            </Typography>\n          </Stack>\n\n          <Stack spacing={2}>\n            <TextField\n              fullWidth\n              required\n              label=\"Full Name\"\n              placeholder=\"John Doe\"\n              variant=\"outlined\"\n              value={formData.fullName}\n              onChange={handleInputChange(\"fullName\")}\n              error={!!errors.fullName}\n              helperText={errors.fullName}\n              slotProps={{\n                inputLabel: {\n                  sx: {\n                    fontSize: \"0.875rem\",\n                    fontWeight: 500,\n                    textTransform: \"uppercase\",\n                    color: \"text.secondary\",\n                    \"&.Mui-focused\": {\n                      color: \"primary.main\",\n                    },\n                  },\n                },\n              }}\n            />\n\n            <TextField\n              fullWidth\n              required\n              label=\"Billing Address\"\n              placeholder=\"Enter your billing address\"\n              variant=\"outlined\"\n              value={formData.billingAddress}\n              onChange={handleInputChange(\"billingAddress\")}\n              error={!!errors.billingAddress}\n              helperText={errors.billingAddress}\n              slotProps={{\n                inputLabel: {\n                  sx: {\n                    fontSize: \"0.875rem\",\n                    fontWeight: 500,\n                    textTransform: \"uppercase\",\n                    color: \"text.secondary\",\n                    \"&.Mui-focused\": {\n                      color: \"primary.main\",\n                    },\n                  },\n                },\n                input: {\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <LocationOnIcon sx={{ color: \"text.secondary\" }} />\n                    </InputAdornment>\n                  ),\n                },\n              }}\n            />\n\n            <Stack direction=\"row\" spacing={2}>\n              <TextField\n                fullWidth\n                required\n                label=\"City\"\n                placeholder=\"Stockholm\"\n                variant=\"outlined\"\n                value={formData.city}\n                onChange={handleInputChange(\"city\")}\n                error={!!errors.city}\n                helperText={errors.city}\n                slotProps={{\n                  inputLabel: {\n                    sx: {\n                      fontSize: \"0.875rem\",\n                      fontWeight: 500,\n                      textTransform: \"uppercase\",\n                      color: \"text.secondary\",\n                      \"&.Mui-focused\": {\n                        color: \"primary.main\",\n                      },\n                    },\n                  },\n                }}\n              />\n              <TextField\n                fullWidth\n                required\n                label=\"ZIP Code\"\n                placeholder=\"12804\"\n                variant=\"outlined\"\n                value={formData.zipCode}\n                onChange={handleInputChange(\"zipCode\")}\n                error={!!errors.zipCode}\n                helperText={errors.zipCode}\n                slotProps={{\n                  inputLabel: {\n                    sx: {\n                      fontSize: \"0.875rem\",\n                      fontWeight: 500,\n                      textTransform: \"uppercase\",\n                      color: \"text.secondary\",\n                      \"&.Mui-focused\": {\n                        color: \"primary.main\",\n                      },\n                    },\n                  },\n                }}\n              />\n            </Stack>\n\n            <TextField\n              fullWidth\n              required\n              select\n              label=\"Country\"\n              value={formData.country}\n              onChange={handleInputChange(\"country\")}\n              variant=\"outlined\"\n              slotProps={{\n                inputLabel: {\n                  sx: {\n                    fontSize: \"0.875rem\",\n                    fontWeight: 500,\n                    textTransform: \"uppercase\",\n                    color: \"text.secondary\",\n                    \"&.Mui-focused\": {\n                      color: \"primary.main\",\n                    },\n                  },\n                },\n              }}\n            >\n              <MenuItem value=\"Sweden\">Sweden</MenuItem>\n              <MenuItem value=\"Norway\">Norway</MenuItem>\n              <MenuItem value=\"Denmark\">Denmark</MenuItem>\n              <MenuItem value=\"Finland\">Finland</MenuItem>\n            </TextField>\n          </Stack>\n        </Box>\n\n        <Box sx={{ flex: 1 }}>\n          <Stack direction=\"row\" spacing={1} alignItems=\"center\" sx={{ mb: 3 }}>\n            <Box\n              sx={{\n                width: 32,\n                height: 32,\n                borderRadius: \"50%\",\n                border: 2,\n                borderColor: \"primary.main\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                color: \"primary.main\",\n                fontWeight: 600,\n              }}\n            >\n              2\n            </Box>\n            <Typography variant=\"h6\" sx={{ fontWeight: 500 }}>\n              Credit Card Info\n            </Typography>\n          </Stack>\n\n          <Stack spacing={2}>\n            <TextField\n              fullWidth\n              required\n              label=\"Cardholder's Name\"\n              placeholder=\"John Doe\"\n              variant=\"outlined\"\n              value={formData.cardholderName}\n              onChange={handleInputChange(\"cardholderName\")}\n              error={!!errors.cardholderName}\n              helperText={errors.cardholderName}\n              slotProps={{\n                inputLabel: {\n                  sx: {\n                    fontSize: \"0.875rem\",\n                    fontWeight: 500,\n                    textTransform: \"uppercase\",\n                    color: \"text.secondary\",\n                    \"&.Mui-focused\": {\n                      color: \"primary.main\",\n                    },\n                  },\n                },\n              }}\n            />\n\n            <TextField\n              fullWidth\n              required\n              label=\"Card Number\"\n              placeholder=\"1234 5678 9012 3456\"\n              variant=\"outlined\"\n              value={formData.cardNumber}\n              onChange={handleInputChange(\"cardNumber\")}\n              error={!!errors.cardNumber}\n              helperText={\n                errors.cardNumber || \"Enter your 16-digit card number\"\n              }\n              slotProps={{\n                htmlInput: {\n                  maxLength: 19,\n                  pattern: \"[0-9s]{13,19}\",\n                },\n                inputLabel: {\n                  sx: {\n                    fontSize: \"0.875rem\",\n                    fontWeight: 500,\n                    textTransform: \"uppercase\",\n                    color: \"text.secondary\",\n                    \"&.Mui-focused\": {\n                      color: \"primary.main\",\n                    },\n                  },\n                },\n              }}\n            />\n\n            <Stack direction=\"row\" spacing={2}>\n              <TextField\n                fullWidth\n                required\n                select\n                label=\"Exp. Month\"\n                value={formData.expMonth}\n                onChange={handleInputChange(\"expMonth\")}\n                variant=\"outlined\"\n                slotProps={{\n                  inputLabel: {\n                    sx: {\n                      fontSize: \"0.875rem\",\n                      fontWeight: 500,\n                      textTransform: \"uppercase\",\n                      color: \"text.secondary\",\n                      \"&.Mui-focused\": {\n                        color: \"primary.main\",\n                      },\n                    },\n                  },\n                }}\n              >\n                {Array.from({ length: 12 }, (_, i) => i + 1).map((month) => (\n                  <MenuItem\n                    key={month}\n                    value={month.toString().padStart(2, \"0\")}\n                  >\n                    {month.toString().padStart(2, \"0\")}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                fullWidth\n                required\n                select\n                label=\"Exp. Year\"\n                value={formData.expYear}\n                onChange={handleInputChange(\"expYear\")}\n                variant=\"outlined\"\n                slotProps={{\n                  inputLabel: {\n                    sx: {\n                      fontSize: \"0.875rem\",\n                      fontWeight: 500,\n                      textTransform: \"uppercase\",\n                      color: \"text.secondary\",\n                      \"&.Mui-focused\": {\n                        color: \"primary.main\",\n                      },\n                    },\n                  },\n                }}\n              >\n                {Array.from({ length: 20 }, (_, i) => {\n                  const year = new Date().getFullYear() + i;\n                  return (\n                    <MenuItem key={year} value={year.toString().slice(-2)}>\n                      {year}\n                    </MenuItem>\n                  );\n                })}\n              </TextField>\n            </Stack>\n\n            <TextField\n              fullWidth\n              required\n              label=\"CVC Number\"\n              placeholder=\"123\"\n              variant=\"outlined\"\n              value={formData.cvc}\n              onChange={handleInputChange(\"cvc\")}\n              error={!!errors.cvc}\n              helperText={errors.cvc || \"3-digit security code on back of card\"}\n              slotProps={{\n                htmlInput: {\n                  maxLength: 4,\n                  pattern: \"[0-9]{3,4}\",\n                },\n                inputLabel: {\n                  sx: {\n                    fontSize: \"0.875rem\",\n                    fontWeight: 500,\n                    textTransform: \"uppercase\",\n                    color: \"text.secondary\",\n                    \"&.Mui-focused\": {\n                      color: \"primary.main\",\n                    },\n                  },\n                },\n              }}\n            />\n          </Stack>\n        </Box>\n      </Stack>\n    </Container>\n  );\n}\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "screenshot": "/screenshots/payment-form2.png"
  }
}