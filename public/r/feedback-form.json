{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "feedback-form",
  "type": "registry:block",
  "title": "Feedback Form",
  "description": "A feedback form block for collecting user feedback.",
  "dependencies": [
    "@mui/material",
    "@emotion/react",
    "@emotion/styled",
    "zod"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/blocks/feedback-form/feedback-form.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport { z } from \"zod\";\n\nconst feedbackFormSchema = z.object({\n  name: z.string().min(1, \"Name is required\"),\n  email: z.string().email(\"Invalid email address\"),\n  feedback: z.string().min(1, \"Feedback is required\"),\n});\n\nexport function FeedbackForm() {\n  const [pending, setPending] = React.useState(false);\n  const [state, setState] = React.useState({\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      feedback: \"\",\n    },\n    errors: {\n      name: \"\",\n      email: \"\",\n      feedback: \"\",\n    },\n  });\n\n  const handleSubmit = React.useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      setPending(true);\n      const formData = new FormData(e.target as HTMLFormElement);\n      const data = Object.fromEntries(formData.entries());\n      const result = feedbackFormSchema.safeParse(data);\n      if (!result.success) {\n        setState((prev) => ({\n          ...prev,\n          errors: Object.fromEntries(\n            Object.entries(result.error.flatten().fieldErrors).map(\n              ([key, value]) => [key, value?.[0] ?? \"\"]\n            )\n          ) as Record<keyof typeof state.errors, string>,\n        }));\n        setPending(false);\n        return;\n      }\n      setPending(false);\n      // Optionally handle successful feedback submission here\n    },\n    []\n  );\n\n  return (\n    <form onSubmit={handleSubmit} style={{ width: \"100%\", maxWidth: 400 }}>\n      <Card variant=\"outlined\">\n        <CardHeader\n          title=\"We value your feedback!\"\n          subheader=\"Let us know how we can improve.\"\n        />\n        <Divider />\n        <CardContent\n          style={{ display: \"flex\", flexDirection: \"column\", gap: 16 }}\n        >\n          <TextField\n            id=\"name\"\n            name=\"name\"\n            label=\"Name\"\n            placeholder=\"Your name\"\n            disabled={pending}\n            error={!!state.errors.name}\n            helperText={state.errors.name}\n            defaultValue={state.defaultValues.name}\n            required\n            size=\"small\"\n            fullWidth\n            margin=\"dense\"\n          />\n          <TextField\n            id=\"email\"\n            name=\"email\"\n            label=\"Email\"\n            placeholder=\"you@example.com\"\n            disabled={pending}\n            error={!!state.errors.email}\n            helperText={state.errors.email}\n            defaultValue={state.defaultValues.email}\n            required\n            size=\"small\"\n            fullWidth\n            margin=\"dense\"\n            type=\"email\"\n          />\n          <TextField\n            id=\"feedback\"\n            name=\"feedback\"\n            label=\"Feedback\"\n            placeholder=\"Type your feedback here...\"\n            disabled={pending}\n            error={!!state.errors.feedback}\n            helperText={state.errors.feedback}\n            defaultValue={state.defaultValues.feedback}\n            required\n            size=\"small\"\n            fullWidth\n            margin=\"dense\"\n            multiline\n            minRows={3}\n          />\n        </CardContent>\n        <CardActions>\n          <Button\n            type=\"submit\"\n            size=\"small\"\n            disabled={pending}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            {pending ? \"Sending...\" : \"Send Feedback\"}\n          </Button>\n        </CardActions>\n      </Card>\n    </form>\n  );\n}\n",
      "type": "registry:block"
    }
  ]
}