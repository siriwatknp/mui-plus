{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "ai-suggestion",
  "type": "registry:item",
  "title": "Ai Suggestion",
  "description": "A ai-suggestion item.",
  "dependencies": [
    "@mui/material",
    "@emotion/react",
    "@emotion/styled"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "components/ai-suggestion/ai-suggestion.demo.tsx",
      "target": "src/mui-plus/components/ai-suggestion/ai-suggestion.demo.tsx",
      "content": "\"use client\";\n\nimport { Suggestions, Suggestion } from \"./ai-suggestion\";\n\nexport default function AISuggestionDemo() {\n  const handleSuggestionClick = (suggestion: string) => {\n    console.log(\"Selected suggestion:\", suggestion);\n  };\n\n  return (\n    <div className=\"w-full max-w-3xl mx-auto space-y-8 p-8\">\n      <div className=\"space-y-2\">\n        <h3 className=\"text-sm font-medium text-muted-foreground\">\n          Basic Suggestions\n        </h3>\n        <Suggestions>\n          <Suggestion\n            suggestion=\"Tell me more about React hooks\"\n            onClick={handleSuggestionClick}\n          />\n          <Suggestion\n            suggestion=\"How do I manage state?\"\n            onClick={handleSuggestionClick}\n          />\n          <Suggestion\n            suggestion=\"What are the best practices?\"\n            onClick={handleSuggestionClick}\n          />\n          <Suggestion\n            suggestion=\"Show me an example\"\n            onClick={handleSuggestionClick}\n          />\n        </Suggestions>\n      </div>\n\n      <div className=\"space-y-2\">\n        <h3 className=\"text-sm font-medium text-muted-foreground\">\n          Long Suggestions (Scrollable)\n        </h3>\n        <Suggestions>\n          <Suggestion\n            suggestion=\"Explain the difference between useState and useReducer\"\n            onClick={handleSuggestionClick}\n          />\n          <Suggestion\n            suggestion=\"How do I optimize performance in React applications?\"\n            onClick={handleSuggestionClick}\n          />\n          <Suggestion\n            suggestion=\"What are the common patterns for data fetching?\"\n            onClick={handleSuggestionClick}\n          />\n          <Suggestion\n            suggestion=\"Can you help me understand React Server Components?\"\n            onClick={handleSuggestionClick}\n          />\n          <Suggestion\n            suggestion=\"What's the best way to handle forms in React?\"\n            onClick={handleSuggestionClick}\n          />\n          <Suggestion\n            suggestion=\"How do I implement authentication in Next.js?\"\n            onClick={handleSuggestionClick}\n          />\n        </Suggestions>\n      </div>\n\n      <div className=\"space-y-2\">\n        <h3 className=\"text-sm font-medium text-muted-foreground\">\n          Custom Styled Suggestions\n        </h3>\n        <Suggestions>\n          <Suggestion\n            suggestion=\"Primary action\"\n            onClick={handleSuggestionClick}\n          />\n          <Suggestion\n            suggestion=\"Contained action\"\n            onClick={handleSuggestionClick}\n            variant=\"contained\"\n          />\n          <Suggestion\n            suggestion=\"text action\"\n            onClick={handleSuggestionClick}\n            variant=\"text\"\n          />\n        </Suggestions>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:item"
    },
    {
      "path": "components/ai-suggestion/ai-suggestion.tsx",
      "target": "src/mui-plus/components/ai-suggestion/ai-suggestion.tsx",
      "content": "\"use client\";\n\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport type { ButtonProps } from \"@mui/material/Button\";\nimport type { SxProps, Theme } from \"@mui/material/styles\";\nimport type { ReactNode } from \"react\";\n\nexport type SuggestionsProps = {\n  children?: ReactNode;\n  sx?: SxProps<Theme>;\n};\n\nexport const Suggestions = ({ children, sx }: SuggestionsProps) => (\n  <Box\n    sx={{\n      width: \"100%\",\n      overflowX: \"auto\",\n      overflowY: \"hidden\",\n      whiteSpace: \"nowrap\",\n      \"&::-webkit-scrollbar\": {\n        height: 8,\n      },\n      \"&::-webkit-scrollbar-track\": {\n        bgcolor: \"action.hover\",\n        borderRadius: 1,\n      },\n      \"&::-webkit-scrollbar-thumb\": {\n        bgcolor: \"action.disabled\",\n        borderRadius: 1,\n        \"&:hover\": {\n          bgcolor: \"action.selected\",\n        },\n      },\n      ...sx,\n    }}\n  >\n    <Box\n      sx={{\n        display: \"flex\",\n        width: \"max-content\",\n        flexWrap: \"nowrap\",\n        alignItems: \"center\",\n        gap: 1,\n      }}\n    >\n      {children}\n    </Box>\n  </Box>\n);\n\nexport type SuggestionProps = Omit<ButtonProps, \"onClick\"> & {\n  suggestion: string;\n  onClick?: (suggestion: string) => void;\n};\n\nexport const Suggestion = ({\n  suggestion,\n  onClick,\n  sx,\n  variant = \"outlined\",\n  size = \"small\",\n  children,\n  ...props\n}: SuggestionProps) => {\n  const handleClick = () => {\n    onClick?.(suggestion);\n  };\n\n  return (\n    <Button\n      onClick={handleClick}\n      size={size}\n      type=\"button\"\n      variant={variant}\n      sx={{\n        borderRadius: 99,\n        px: 2,\n        textTransform: \"none\",\n        whiteSpace: \"nowrap\",\n        ...sx,\n      }}\n      {...props}\n    >\n      {children || suggestion}\n    </Button>\n  );\n};\n",
      "type": "registry:item"
    }
  ],
  "meta": {
    "screenshot": "/screenshots/ai-suggestion.png",
    "category": "ai"
  }
}