{
  "$schema": "https://ui.shadcn.com/schema/registry.json",
  "name": "MUI Registry",
  "homepage": "https://mui-registry.vercel.app",
  "items": [
    {
      "name": "login-form",
      "type": "registry:block",
      "title": "Login Form",
      "description": "A simple Login Form block",
      "registryDependencies": [],
      "files": [
        {
          "path": "registry/new-york/blocks/login-form/login-form.tsx",
          "type": "registry:block"
        }
      ]
    },
    {
      "name": "complex-component",
      "type": "registry:component",
      "title": "Complex Component",
      "description": "A complex component showing hooks, libs and components.",
      "registryDependencies": ["card"],
      "files": [
        {
          "path": "registry/new-york/blocks/complex-component/page.tsx",
          "type": "registry:page",
          "target": "app/pokemon/page.tsx"
        },
        {
          "path": "registry/new-york/blocks/complex-component/components/pokemon-card.tsx",
          "type": "registry:component"
        },
        {
          "path": "registry/new-york/blocks/complex-component/components/pokemon-image.tsx",
          "type": "registry:component"
        },
        {
          "path": "registry/new-york/blocks/complex-component/lib/pokemon.ts",
          "type": "registry:lib"
        },
        {
          "path": "registry/new-york/blocks/complex-component/hooks/use-pokemon.ts",
          "type": "registry:hook"
        }
      ]
    },
    {
      "name": "avatar-dropdown",
      "type": "registry:block",
      "title": "Avatar Dropdown",
      "description": "An avatar that opens a dropdown menu with user management and settings options.",
      "registryDependencies": [],
      "files": [
        {
          "path": "registry/new-york/blocks/avatar-dropdown/index.tsx",
          "type": "registry:block"
        }
      ]
    },
    {
      "name": "input-siblings",
      "type": "registry:component",
      "title": "Input Siblings",
      "description": "A set of input components demonstrating sibling input logic and custom hooks.",
      "files": [
        {
          "path": "registry/new-york/blocks/input-siblings/page.tsx",
          "type": "registry:page"
        },
        {
          "path": "registry/new-york/blocks/input-siblings/hooks/useInput.ts",
          "type": "registry:hook"
        },
        {
          "path": "registry/new-york/blocks/input-siblings/hooks/useInputSiblings.ts",
          "type": "registry:hook"
        },
        {
          "path": "registry/new-york/blocks/input-siblings/hooks/useSeparatorInput.ts",
          "type": "registry:hook"
        },
        {
          "path": "registry/new-york/blocks/input-siblings/hooks/types.ts",
          "type": "registry:hook"
        }
      ]
    }
  ]
}
